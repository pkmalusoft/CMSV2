@model CMSV2.Models.DRRVM

@{

    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var spath = "/DRSReceipt/Index/0";// System.Configuration.ConfigurationManager.AppSettings["spath"].ToString();
    var _decimal = @Session["Decimal"].ToString();
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />

<style>
    .table > tr {
        height: 32px;
    }
    .cred
    {
        color:red;
    }
    #tblTrans > tr > td {
        text-align: right !important;
    }
        #tblTrans > tr > td:first-child {
            text-align: left !important;
        }
    .active, .accordion:hover {
        background-color: #07a7e3 !important;
        color: white;
    }
    /*#tbl1 tr:first-of-type {
            background: #35b8eb;
            color: #fff;
        }*/

    .form_field {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        padding: 16px;
        margin-top: 21px;
    }

    .headinglabel {
        font-family: Calibri;
        font-size: 17px;
        color: #1b1919 !important;
    }

    .modal-dialog {
        width: 800px;
    }

    #staffmodelbody {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }

    .flex {
        display: flex;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    #popup h5 {
        border: 2px solid #35b8eb;
        min-width: 150px;
        height: 40px;
        border-radius: 5px;
        line-height: 40px;
        color: #35b8eb;
        text-align: center;
        font-weight: bold;
    }
</style>
<style>
    /* Style the buttons that are used to open and close the accordion panel */
    .accordion {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active, .accordion:hover {
            background-color: #ccc;
        }

    /* Style the accordion panel. Note: hidden by default */
    .panel {
        padding: 0 18px;
        background-color: white;
        display: none;
        overflow: hidden;
    }
</style>
<script type="text/javascript">
    var AWBObj = {};
    function deletetrans(obj, i) {
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
        calculatetotal();
    }
    function deletenewawb(obj, i) {
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
    }
    function isNumberKey1(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        //if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        if (charCode != 8 && charCode != 0 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function deleteexp(obj, j) {
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
    }

    function allocate(obj) {

         var balamt = $('#BalanceAmount').val();
         if (balamt == "")
             balamt = "0";

         var idindex = $(obj).attr('id').split('_')[1];
         var txinvoice = $('#txtinvoice_' + idindex);
         if (parseFloat(balamt) > 0) {

             var idtext = 'txtinvoice_' + idindex;

             var balance = $('#txtbalance_' + idindex).val();
             if (balance == "") {
                 balance = 0;
             }
             var adjust = $('#txtadjust_' + idindex).val();
             if (adjust == "")
                 adjust = 0;
             if (parseFloat(balance) > 0 && parseFloat(balamt) > parseFloat(balance)) {
                 balance = parseFloat(balance) - parseFloat(adjust);
             }
             else {
                 balance = parseFloat(balamt); //parseFloat(balance) - parseFloat(adjust);
             }
             if ($(obj).is(':checked')) {
                 $(txinvoice).val(parseFloat(balance).toFixed(@_decimal));
             }
             else {
                 $(txinvoice).val(parseFloat("0").toFixed(@_decimal));
             }
             ValidateTotal();
         }
         else {
             $(txinvoice).val(parseFloat("0").toFixed(@_decimal));
             ValidateTotal();
         }
    }

    $(document).ready(function () {
        var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                /* Toggle between adding and removing the "active" class,
                to highlight the button that controls the panel */
                this.classList.toggle("active");

                /* Toggle between hiding and showing the active panel */
                var panel = this.nextElementSibling;
                if (panel.style.display === "block") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
            });
        }
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $("textarea").css({ "border-radius": "5px" });

        $('#tblTrans').on("click", "#DeleteNewRow", function () {
            debugger;
            //$(this).parent().parent().remove();
            $(this).parent().parent().addClass('hide');
            var obj = $(this).parent().parent().find('.hdndeleted');
            $(obj).val(true);
        });

         $("#DRSNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/DRSReceipt/GetDRSNo',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.DRSNo,
                                value: val.DRSID,
                                DRSDate:val.DRSDate
                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#DRSNo").val(i.item.label);
                $('#DRSID').val(i.item.value);
                $('#DRSID').attr('label', i.item.label);
             },
            select: function (e, i) {
                e.preventDefault();
                $("#DRSNo").val(i.item.label);
                $('#DRSID').val(i.item.value);
                $('#DRSID').attr('label', i.item.label);

            },

         });

        $("#DRSReceiptNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/DRSReconc/GetDRSReceiptNo',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.DocumentNo,
                                value: val.DRSRecPayId,
                                ReceiptDate: val.DRSRecPayDate,                                
                                DRSID: val.DRSID,                               
                                ReceivedAmount: val.ReceivedAmount,
                                DeliveredBy: val.DeliveredBy

                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#DRSReceiptNo").val(i.item.label);
                $('#DRSRecPayID').val(i.item.value);
                var myDate = new Date(i.item.ReceiptDate.match(/\d+/)[0] * 1);
                var cmon = myDate.getMonth() + 1;
                var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                $('#ReceiptDate').val(collectdate);

                $('#DRSID').val(i.item.DRSID);
                //$('#DRSNo').val(i.item.DRSNo);
                //myDate = new Date(i.item.DRSDate.match(/\d+/)[0] * 1);
                //cmon = myDate.getMonth() + 1;
                //var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                //$('#DRSDate').val(collectdate);

                $('#DeliveredBy').val(i.item.DeliveredBy).trigger('change');
                $('#ReceivedAmount').val(parseFloat(i.item.ReceivedAmount).toFixed(2));
            },
            select: function (e, i) {
                e.preventDefault();
                $("#DRSReceiptNo").val(i.item.label);
                $('#DRSRecPayID').val(i.item.value);
                var myDate = new Date(i.item.ReceiptDate.match(/\d+/)[0] * 1);
                var cmon = myDate.getMonth() + 1;
                var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                $('#ReceiptDate').val(collectdate);

                $('#DRSID').val(i.item.DRSID);
                //$('#DRSNo').val(i.item.DRSNo);
                //myDate = new Date(i.item.DRSDate.match(/\d+/)[0] * 1);
                //cmon = myDate.getMonth() + 1;
                //var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                //$('#DRSDate').val(collectdate);
                $('#DeliveredBy').val(i.item.DeliveredBy).trigger('change');
                $('#ReceivedAmount').val(parseFloat(i.item.ReceivedAmount).toFixed(2));
            },

        });

        $("#DRSReceiptNo").change(function () {

            if ($('#DRSID').val() != '') {
                $.ajax({
                    url: '/DRSReconc/GetDRSDetail',
                    datatype: "json",
                    data: {
                        DRSID: $('#DRSID').val()
                    },
                    success: function (data) {
                        console.log(data);
                        $('#DRSNo').val(data.DRSNo);
                        myDate = new Date(data.DRSDate.match(/\d+/)[0] * 1);
                        cmon = myDate.getMonth() + 1;
                        var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                        $('#DRSDate').val(collectdate);
                        //$('#DeliveredBy').val(data.DeliveredBy).trigger('change');

                    }
                });
            }
        })
        //$("#DRSNo").autocomplete({
        //    source: function (request, response) {
        //        $.ajax({
        //            url: '/DRSReconc/GetDRS',
        //            datatype: "json",
        //            data: {
        //                term: request.term
        //            },
        //            success: function (data) {
        //                response($.map(data, function (val, item) {
        //                    return {
        //                        label: val.DRSNo,
        //                        value: val.DRSID,
        //                        Delivered: val.DeliveredBy,
        //                        DRSDate: val.DRSDate,                               
        //                    }
        //                }))
        //            }
        //        })
        //    },
        //    minLength: 0,
        //    autoFocus: false,
        //    focus: function (e, i) {
        //        $("#DRSNo").val(i.item.label);
        //        $('#DRSID').val(i.item.value);
                 
        //        var myDate = new Date(i.item.DRSDate.match(/\d+/)[0] * 1);
        //        var cmon = myDate.getMonth() + 1;
        //        var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
        //        $('#DRSDate').val(collectdate);
        //        $('#DeliveredBy').val(i.item.DeliveredBy).trigger('change');
        //    },
        //    select: function (e, i) {
        //        e.preventDefault();
        //        $("#DRSNo").val(i.item.label);
        //        $('#DRSID').val(i.item.value);
                 
        //        var myDate = new Date(i.item.DRSDate.match(/\d+/)[0] * 1);
        //        var vcmon = myDate.getMonth() + 1;
        //        var collectdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
        //        $('#DRSDate').val(collectdate);
        //        $('#DeliveredBy').val(i.item.DeliveredBy).trigger('change');
                
        //    },

        //});

        $("#txtAWB").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/DRSReconc/GetDRSAWB',
                    datatype: "json",
                    data: {
                        term: request.term, DRSID:$('#DRSID').val()
                    },
                    success: function (data) {                        
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AWBNo,
                                value: val.InscanId,
                                InscanId: val.InscanId,
                                Shipper: val.Shipper ,
                                Consignee: val.Consignee,
                                AWBDate: val.AWBDate,
                                CourierCharge: val.CourierCharge,
                                OtherCharge: val.OtherCharge,
                                TotalCharge: val.TotalCharge,
                                MaterialCost: val.MaterialCost,
                                IsNCND: val.IsNCND,
                                IsCashOnly: val.IsCashOnly,
                                IsCollectMaterial: val.IsCollectMaterial,
                                IsCheque: val.IsCheque,
                                IsDoCopyBack: val.IsDOCopyBack,
                                Pieces: val.Pieces,
                                Weight: val.Weight

                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtAWB").val(i.item.label);
                $('#txtInScanID').val(i.item.value);
                displayawbdetail(i.item);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtAWB").val(i.item.label);
                $('#txtInScanID').val(i.item.value);
                displayawbdetail(i.item);
            },

        });

        function displayawbdetail(obj) {
            debugger;
            if (obj != null) {
                AWBObj = obj;
                var awbdate1 = obj.AWBDate;
                var myDate = new Date(awbdate1.match(/\d+/)[0] * 1);
                var cmon = myDate.getMonth() + 1;
                var ulhtml = '<ul>';
                var awbdate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear();
                $('#txtAWBDate').val(awbdate);
                //ulhtml = ulhtml + awbdate;
                $('#txtShipper').val(obj.Shipper);
                $('#txtConsignee').val(obj.Consignee);
                $('#txtPieces').val(obj.Pieces);
                $('#txtWeight').val(parseFloat(obj.Weight).toFixed(3));
                //var shipper = '<li>Shipper :' + obj.Shipper + '</li>';
                //ulhtml = ulhtml + shipper;
                //var consignee = '<li>Consignee : ' + obj.Consignee + '</li>';
                //ulhtml = ulhtml + consignee;
                //var pcs = '<li>Pcs : ' + obj.Pieces + '</li>';
                //var weight = '<li>Weight : ' + obj.Weight + '</li>';
                //ulhtml = ulhtml + pcs;
                //ulhtml = ulhtml + weight;

                var Instructions = '';// '<li>Instructions <ul>';
                if (obj.IsNCND == true)
                    Instructions = Instructions + ',NCND';
                if (obj.IsCashOnly == true)
                    Instructions = Instructions + ',Cash Only';
                if (obj.IsCheque == true)
                    Instructions = Instructions + ',Cheque';
                if (obj.IsCollectMaterial == true)
                    Instructions = Instructions + ',Collect Material';
                if (obj.IsDoCopyBack == true)
                    Instructions = Instructions + ',Do Copy Back';

                //ulhtml = ulhtml + Instructions;
                //ulthml = ulhtml + '</ul';
                //$('#divawbdetail').html(ulhtml);
                $('#txtInstructions').val(Instructions);
                $('#txtCODAmount').val(obj.TotalCharge);
                $('#txtMCCost').val(obj.MaterialCost);
            }
            else {
                AWBObj = {};
                $("#txtAWB").val('');
                $('#txtInScanID').val(0);
                $('#txtAWBDate').val('');              
                $('#txtShipper').val('');
                $('#txtConsignee').val('');
                $('#txtPieces').val('');
                $('#txtWeight').val('');
                $('#txtInstructions').val('');           
                $('#txtCODAmount').val('');
                $('#txtDiscount').val('');
                $('#txtMCCost').val('');
                $('#txtCODReceived').val('');
                $('#txtMCReceived').val('');
            }
        }
        $('#btnAddAWB').click(function () {
            var i = $('#tblTrans > tr').length;
            var TransType = 'AWB';
            var Reference = 'AWB:' + AWBObj.label;
            var COD = $('#txtCODReceived').val();
            var Discount = $('#txtDiscount').val();
            var MCReceived = $('#txtMCReceived').val();
            var inscanid = AWBObj.value;
            var total = parseFloat(COD) + parseFloat(MCReceived);
            var html = '<tr><td><input type="hidden" value="AWB" id="hdntype_' + i + '" /><input class="hdndeleted" type="hidden" value="false" id="hdndeleted_' + i + '" /> <input type="hidden" id="hdnrefId_' + i + '" value="' + inscanid + '" /><input type="hidden" id="hdnref_' + i + '" value="' + Reference + '" /> <input type="hidden" id="hdncod_' + i + '" value="' + COD + '" /><input type="hidden" id="hdndiscount_' + i + '" value="' + Discount + '" /> <input type="hidden" id="hdnmc_' + i + '" value="' + MCReceived + '" /><input type="hidden" id="hdnreceipt_' + i + '" value="0" /> <input type="hidden" id="hdnpkp_' + i + '" value="0" /> <input type="hidden" id="hdnexp_' + i + '" value="0" />'  + Reference + '</td>';
            html = html + '<td>' + parseFloat(COD).toFixed(2) + '</td>';  //cod
            html = html + '<td>' + parseFloat(Discount).toFixed(2) + '</td>';  //cod
            html = html + '<td>' + parseFloat(MCReceived).toFixed(2) + '</td>';//mcreceived
            html = html + '<td>' + '' + '</td>';//receipt
            html = html + '<td>' + '' + '</td>';//pickupcash
            html = html + '<td>' + '' + '</td>';//expenses
            html = html + '<td><input type="hidden" value="' + parseFloat(total).toFixed(2) + '" id="hdntotal_' + i + '" />' + parseFloat(total).toFixed(2) + '</td>';//total
            html = html + '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td>'; //delete

            $('#tblTrans').append(html);
            displayawbdetail(null);
            calculatetotal();

        });


        $("#txtCustomer").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/CustomerReceipt/GetCustomerName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                ID: val.CustomerID,
                                type: val.CustomerType
                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtCustomer").val(i.item.label);
                $('#txtCustomerId').val(i.item.ID);
                $('#txtCustomerId').attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtCustomer").val(i.item.label);
                $('#txtCustomerId').val(i.item.ID);
                $('#txtCustomerId').attr('label', i.item.label);

            },

        });
        $('#btnsearchInvoice').click(function () {
            debugger;
             var ID = $('#txtCustomerId').val();
            $.ajax({
                type: "POST",
                url: '/CustomerReceipt/GetTradeInvoiceOfCustomer/' + ID,
                data: { 'ID': ID, 'amountreceived': 0 },
                success: function (data) {
                    $('#tblinvoice').html('');
                    //$scope.Orders = data;
                    var amt = 0;
                    for (var i = 0; i < data.length; i++) {
                        var date = new Date(data[i].date);
                        amt = parseFloat(amt) + parseFloat(data[i].Amount);
                        var tempdate = new Date(date).getDate() + '/' + (new Date(date).getMonth() + 1) + '/' + new Date(date).getFullYear();
                        var invoiceno = "'" + data[i].InvoiceNo + "'";
                        html = '<tr>' +
                            '<td>' + data[i].InvoiceNo + '<input type="hidden" id="hdnInvoiceType_' + i + '"  value="' + data[i].InvoiceType + '-' + data[i].InvoiceNo + '" />  <input id="hdnOpDetailId_' + i + '" value=' + data[i].AcOPInvoiceDetailID + ' type="hidden"/><input id="hdnInvoiceId_' + i + '"  value="' + data[i].SalesInvoiceID + '" type="hidden"/></td>' +
                            //'<td>' + data[i].DateTime + '<input id="" name="CustomerRcieptChildVM[' + i + '].InvoiceDate" value=' + data[i].DateTime + ' type="hidden"></td>' +
                            //'<td class="text-right">' + parseFloat(data[i].InvoiceAmount).toFixed(@_decimal) + '<input id="" name="CustomerRcieptChildVM[' + i + '].AmountToBeRecieved" value=' + data[i].InvoiceAmount + ' type="hidden" class="AmountToBeRecieved"></td>' +
                            //'<td class="text-right">' + parseFloat(data[i].AmountReceived).toFixed(@_decimal) + '<input id="" name="CustomerRcieptChildVM[' + i + '].AmtPaidTillDate" value=' + data[i].AmountReceived + ' type="hidden"></td>' +
                            '<td class="text-right">' + parseFloat(data[i].Balance).toFixed(@_decimal) + '<input id="txtbalance_' + i + '" name="CustomerRcieptChildVM[' + i + '].Balance" value=' + data[i].Balance + ' type="hidden"><input id="" name="CustomerRcieptChildVM[' + i + '].InvoiceNo" value=' + data[i].InvoiceNo + ' type="hidden"></td>';
                            //'<td>' + data[i].Amount + '<input id="" name="customerRcieptVM[' + i + '].Amount" value=' + data[i].Amount + ' type="hidden"></td>' +
                        if (data[i].Allocated == true) {
                            html = html + '<td><input type="checkbox" class="hide" onchange="allocate(this);" checked id="chkallocate_' + i + '" /><input type="text" max="' + data[i].Balance + '" onchange="CheckAmt(this)"  id="txtinvoice_' + i + '" class="amt txtNum text-right AmountReceived" name="CustomerRcieptChildVM[' + i + '].Amount"  value="' + parseFloat(data[i].Amount).toFixed(@_decimal) + '" /></td>';
                        }
                        else {
                            html = html + '<td><input type="checkbox" class="hide" onchange="allocate(this);" id="chkallocate_' + i + '" /><input type="text" max="' + data[i].Balance + '" onchange="CheckAmt(this)"  id="txtinvoice_' + i + '" class="amt txtNum text-right AmountReceived" name="CustomerRcieptChildVM[' + i + '].Amount"  value="' + parseFloat(data[i].Amount).toFixed(@_decimal) + '" /></td>';
                        }

                      //  html=html+ '<td> <input type="text"  onchange="CheckAmt1(this)" id="txtadjust_' + i + '" class="amt1 txtNum text-right AdjustmentAmount" name="CustomerRcieptChildVM[' + i + '].AdjustmentAmount" /></td>';
                        //if (data[i].InvoiceType == 'OP') {
                        //    html = html + '<td></td>';
                        //}
                        //else {
                        //    html = html + '<td> <a href="JavaScript:void(0)"   onclick="ShowAWBAllocation(' + i + ',' + data[i].Amount + ',' + invoiceno + ')" ><i class="fa fa-eye"></i></a></td>';
                        //}

                        html = html + '</tr>';

                        $('#tblinvoice').append(html);
                        //hideLoading();
                    }
                    ValidateTotal();

                }
            });

        });

        $('#btnAddInvoice').click(function () {
            var idtext = 'txtinvoice_';
            $('[id^=' + idtext + ']').each(function (index, item) {
                debugger;
                var i = $('#tblTrans > tr').length;
                var TransType = 'Inv';
                if (parseFloat($(item).val()) > 0) {
                    var Reference = 'Inv:' + $('#hdnInvoiceType_' + index).val().trim();
                    var type = $('#hdnInvoiceType_' + index).val().trim().split('-')[0];

                    var COD = 0;
                    var MCReceived = 0;
                    var receipts = $(item).val();
                    var total = parseFloat(receipts);
                    var invoiceid = $('#hdnInvoiceId_' + index).val();
                    var html = '<tr><td><input type="hidden" value="' + type + '" id="hdntype_' + i + '" /><input class="hdndeleted" type="hidden" value="false" id="hdndeleted_' + i + '" /><input type="hidden" id="hdnrefId_' + i + '" value="' + invoiceid + '" /> <input type="hidden" id="hdnref_' + i + '" value="' + Reference + '" /> <input type="hidden" id="hdncod_' + i + '" value="' + COD + '" /> <input type="hidden" id="hdndiscount_' + i + '" value="0" /><input type="hidden" id="hdnmc_' + i + '" value="' + MCReceived + '" /><input type="hidden" id="hdnreceipt_' + i + '" value="' + receipts + '" /> <input type="hidden" id="hdnpkp_' + i + '" value="0" /> <input type="hidden" id="hdnexp_' + i + '" value="0" />' + Reference + '</td>';
                    html = html + '<td>' + '' + '</td>';  //cod
                    html = html + '<td>' + '' + '</td>';  //cod
                    html = html + '<td>' + '' + '</td>';//mcreceived
                    html = html + '<td>' + parseFloat(receipts).toFixed(2) + '</td>';//receipt
                    html = html + '<td>' + '' + '</td>';//pickupcash
                    html = html + '<td>' + '' + '</td>';//expenses
                    html = html + '<td><input type="hidden" value="' + parseFloat(total).toFixed(2) + '" id="hdntotal_' + i + '" />' + parseFloat(total).toFixed(2) + '</td>';//total
                    html = html + '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td>'; //delete

                    $('#tblTrans').append(html);
                    var totalrow = $('#tblinvoice > tr').length;
                    if ((index + 1) == totalrow) {
                        $('#tblinvoice').html('');
                        calculatetotal();
                    }
                }

        });



        });

        $('#btnAddMoreAWB').click(function () {
            var i = $('#tblNewAWB > tr').length;
            var awb = $('#txtNewAWB').val();
            var awbamount = $('#txtNewAWBAmount').val();
            //var awbid = $('#txtNewAWBInscanId').val();
            var Reference = 'New AWB :' + awb;
            var html = '<tr><td><input type="hidden" class="hdndeleted" id="hdnnewawbdeleted_' + i + '" value="false"/><input type="hidden" id="hdnnewawbref_' + i + '" value="' + Reference + '" /> <input type="text" id="txtNewAWB_' + i + '" value="' + awb  + '" /></td>';
            html = html + '<td>' + '<input type="text" id="txtNewAWBAmount_' + i + '" value="' + awbamount  + '" />' + '</td>';  //cod
            html = html + '<td><a href="javascript:void(0)"  onclick=deletenewawb(this,' + i + ') "><i class="fa fa-times"></i></a></td></tr>'; //delete
            $('#tblNewAWB').append(html);
            $('#txtNewAWB').val('');
            $('#txtNewAWBAmount').val('');

        });

        $('#btnAddNewAWB').click(function () {
            debugger;
            var idtext = 'txtNewAWB_';
            $('[id^=' + idtext + ']').each(function (index, item) {
                var awb = $(item).val();
                var awbamount = $('#txtNewAWBAmount_' + index).val();

                var TransType = 'New AWB';
                if ($(item).val() != '' && parseFloat(awbamount) > 0) {
                    var i = $('#tblTrans > tr').length;
                    var Reference = 'New AWB -' + awb;
                    var COD = 0;
                    var MCReceived = 0;
                    var receipts =0;
                    var total = parseFloat(awbamount);
                    var invoiceid = 0;;
                    var html = '<tr><td><input type="hidden" value="NEW" id="hdntype_' + i + '" /><input type="hidden" value="false" id="hdndeleted_' + i + '" /><input type="hidden" id="hdnrefId_' + i + '" value="' + invoiceid + '" /> <input type="hidden" id="hdnref_' + i + '" value="' + Reference + '" /> <input type="hidden" id="hdncod_' + i + '" value="' + COD + '" /><input type="hidden" id="hdndiscount_' + i + '" value="0" /> <input type="hidden" id="hdnmc_' + i + '" value="' + MCReceived + '" /><input type="hidden" id="hdnreceipt_' + i + '" value="' + receipts + '" /> <input type="hidden" id="hdnpkp_' + i + '" value="' + awbamount + '" /> <input type="hidden" id="hdnexp_' + i + '" value="0" />' + Reference + '</td>';
                    html = html + '<td>' + '' + '</td>';  //cod
                    html = html + '<td>' + '' + '</td>';  //discount
                    html = html + '<td>' + '' + '</td>';//mcreceived
                    html = html + '<td>' + parseFloat(receipts).toFixed(2) + '</td>';//receipt
                    html = html + '<td>' + parseFloat(awbamount).toFixed(2) + '</td>';//pickupcash
                    html = html + '<td>' + '' + '</td>';//expenses
                    html = html + '<td><input type="hidden" value="' + parseFloat(total).toFixed(2) + '" id="hdntotal_' + i + '" />' + parseFloat(total).toFixed(2) + '</td>';//total
                    html = html + '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td></tr>'; //delete

                    $('#tblTrans').append(html);
                    var totalrow = $('#tblNewAWB > tr').length;
                    if ((index + 1) == totalrow) {
                        $('#tblNewAWB').html('');
                        calculatetotal();
                    }
                }

            });

        });
        $("#txtExpAccountHead").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID, TaxPercent: val.TaxPercent
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: true,
            select: function (e, i) {
                e.preventDefault();
                $("#txtExpAccountHead").val(i.item.label);
                $('#txtExpAccountHeadId').val(i.item.AcHeadID);
                //$('#TaxPercent').val(i.item.TaxPercent);

            },

        });

        $('#btnAddMoreAcc').click(function () {
            var i = $('#tblExpenses > tr').length;
            var acheadname = $('#txtExpAccountHead').val();
            var acheadid = $('#txtExpAccountHeadId').val();
            var amount = $('#txtExpAmount').val();
            //var awbid = $('#txtNewAWBInscanId').val();
            var Reference = 'Exp :' + acheadname;
            var html = '<tr><td><input type="hidden" class="hdndeleted" id="hdnexpdeleted_' + i + '" value="false"/><input type="hidden" id="hdnexpref_' + i + '" value="' + Reference + '" /> <input type="hidden" id="hdnacheadid_' + i + '" value="' + acheadid + '" />' + acheadname + '</td>';
            html = html + '<td>' + '<input class="text-right" type="text" id="txtexpamount_' + i + '" value="' + amount + '" />' + '</td>';  //cod
            html = html + '<td><a href="javascript:void(0)"  onclick=deleteexp(this,' + i + ') "><i class="fa fa-times"></i></a></td></tr>'; //delete
            $('#tblExpenses').append(html);
            $('#txtExpAccountHead').val('');
            $('#txtExpAccountHeadId').val(0);
            $('#txtExpAmount').val('');
        });


        $('#btnAddExpense').click(function () {
            debugger;
            var idtext = 'hdnacheadid_';
            $('[id^=' + idtext + ']').each(function (index, item) {
                var amount = $('#txtexpamount_' + index).val();
                var deleted = $('#hdnexpdeleted_' + index).val();

                if (deleted == 'false' && $(item).val() != '' && $(item).val() != '0' && parseFloat(amount) > 0) {
                        var i = $('#tblTrans > tr').length;
                        var Reference = $('#hdnexpref_' + index).val();

                        var COD = 0;
                        var MCReceived = 0;
                        var receipts = 0;
                        var expenses = parseFloat(amount) * -1;
                        var total = parseFloat(amount) *  -1 ;
                        var acheadid = $(item).val();
                    var html = '<tr><td><input type="hidden" value="EXP" id="hdntype_' + i + '" /><input type="hidden" value="false" class="hdndeleted" id="hdndeleted_' + i + '" /><input type="hidden" id="hdnrefId_' + i + '" value="' + acheadid + '" /> <input type="hidden" id="hdnref_' + i + '" value="' + Reference + '" /> <input type="hidden" id="hdncod_' + i + '" value="' + COD + '" /><input type="hidden" id="hdndiscount_' + i + '" value="0" /> <input type="hidden" id="hdnmc_' + i + '" value="' + MCReceived + '" /><input type="hidden" id="hdnreceipt_' + i + '" value="' + receipts + '" /> <input type="hidden" id="hdnpkp_' + i + '" value="0" /> <input type="hidden" id="hdnexp_' + i + '" value="' + expenses + '" />' + Reference + '</td>';
                    html = html + '<td>' + '' + '</td>';  //cod
                    html = html + '<td>' + '' + '</td>';  //discount
                        html = html + '<td>' + '' + '</td>';//mcreceived
                        html = html + '<td>' + '' + '</td>';//receipt
                        html = html + '<td>' + '' + '</td>';//pickupcash
                        html = html + '<td class="cred">' + parseFloat(expenses).toFixed(2) + '</td>';//expenses
                    html = html + '<td class="cred"><input type="hidden" value="' + parseFloat(total).toFixed(2) + '" id="hdntotal_' + i + '" />' + parseFloat(total).toFixed(2) + '</td>';//total
                    html = html + '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td></tr>'; //delete

                        $('#tblTrans').append(html);
                    }
                    var totalrow = $('#tblExpenses > tr').length;

                    debugger;
                    if ((index + 1) == totalrow) {
                        $('#tblExpenses').html('');
                        calculatetotal();
                    }

            });

        });
        $('#btnsearch').click(function () {

            if ($('#CustomerID').val() == 0) {
                alert('Select Customer!');
                return;
            }

            if ($('#FMoney').val() == "") {// || $('#FMoney').val()=="0") {
                //alert('Enter Receipt Amount!');
                $('#FMoney').val(0);
            }

            var ID = $('#DRSID').val();
            var RecPayId = $('#DRSRecPayID').val();
            $.ajax({
                type: "GET",
                url: '/DRSReceipt/GetDRSAWB/',
                data: { 'DRSID': ID, 'RecPayId': RecPayId },
                success: function (data) {
                    $('#tbl1').html('');
                    //$scope.Orders = data;
                    var amt = 0;
                    for (var i = 0; i < data.length; i++) {

                        debugger;

                        $('#tbl1').append('<tr>' +
                            '<td>' + data[i].AWBNO + '<input type = "hidden" name ="Details[' + i + '].AWBNO"  value = "' + data[i].AWBNO + '" /><input type="hidden" name="Details[' + i + '].DRSRecPayDetailID"  value="' + data[i].DRSRecPayDetailID + '" /><input type="hidden" name="Details[' + i + '].InScanID"  value="' + data[i].InScanID + '" />  </td>' +
                            '<td>' + data[i].AWBDate + '<input id="" name="Details[' + i + '].AWBDate" value=' + data[i].DateTime + ' type="hidden"></td>' +
                            '<td class="text-right">' + parseFloat(data[i].CourierCharge).toFixed(@_decimal) + '<input id="" name="Details[' + i + '].CourierCharge" value=' + data[i].CourierCharge + ' type="hidden"></td>' +
                            '<td class="text-right">' + parseFloat(data[i].MaterialCost).toFixed(@_decimal) + '<input id="" name="Details[' + i + '].MaterialCost" value=' + data[i].MaterialCost+ ' type="hidden"/></td>' +
                            '<td class="text-right"><input class="text-right" id="txtccrec_' + i + '" name="Details[' + i + '].CCReceived" value="' + data[i].CCReceived + '" type="text" onchange="CheckAmt1(this)"/></td>' +
                            '<td class="text-right"><input class="text-right" id="txtmcrec_' + i + '" name="Details[' + i + '].MCReceived" value="' + data[i].MCReceived + '" type="text" onchange="CheckAmt1(this)"/></td>' +
                            '<td class="text-right"><input class="text-right" id="txttotal_' + i + '" name="Details[' + i + '].TotalAmount" value="' + data[i].TotalAmount + '" type="text"></td>' +
                            '<td class="text-right"><input class="text-right" id="txtbalance_' + i + '" name="Details[' + i + '].Balance" value="' + data[i].Balance + '" type="text"></td>' +
                            '<td class="text-right"><input class="text-right" id="txtdiscount_' + i + '" name="Details[' + i + '].Discount" value="' + data[i].Discount + '" type="text" onchange="CheckAmt1(this)"></td>' +
                            '<td> <input type="checkbox" id="chkstatus_' + data[i].StatusClose + '" class="" name="Details[' + i + '].StatusClose" />' +
                            '</tr>');
                        //hideLoading();
                    }


                }
            });

        });
        $("#DRSNo").change(function () {
            if ($('#DRSNo').val() != $('#DRSID').attr('label')) {
                $('#DRSNo').val('');
                $('#DRSID').val('0');
                $('#DRSNo').focus();
            }

    });


        if (@Model.DRRID > 0) {
            calculatetotal();
        }

        if (@Model.DRRID> 0) {
            $('#DRSReceiptNo').attr('readonly', 'readonly');
            $('#DRSNo').attr('readonly', 'readonly');            
            $('#DeliveredBy').attr('readonly', 'readonly');            
            
        }


    });
</script>

<script>
    function Comma(Num) { //function to add commas to textboxes
        Num += '';
        Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');
        Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');
        x = Num.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1))
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        $(".aeamt").val(x1 + x2);
    }
</script>

<script type="text/javascript">
    function checkCODReceived() {
        debugger;
        if ($('#txtCODAmount').val() == "")
            $('#txtCODAmount').val(0);
        var codamount = $('#txtCODAmount').val();

        if ($('#txtCODReceived').val() == "")
            $('#txtCODReceived').val(0);

        var codrecevied = $('#txtCODReceived').val();

        if ($('#txtDiscount').val() == "")
            $('#txtDiscount').val(0);

        var discount = $('#txtDiscount').val();
        
        var totalamount = parseFloat(codrecevied) + parseFloat(discount);
        if (parseFloat(codrecevied) > parseFloat(codamount)) {
            $('#txtCODReceived').val(parseFloat(codamount).toFixed(2));
        }
        else if (parseFloat(totalamount) > parseFloat(codamount)) {
            $('#txtCODReceived').val(parseFloat(codamount).toFixed(2));
            $('#txtDiscount').val(0);
        }
        else if (parseFloat(codrecevied)>0 && (parseFloat(codrecevied) < parseFloat(codamount))) {
            var discount = parseFloat(codamount) - parseFloat(codrecevied);
            $('#txtDiscount').val(parseFloat(discount).toFixed(2));
        }
        
    }

    function checkCODDiscount() {

        if ($('#txtCODAmount').val() == "")
            $('#txtCODAmount').val(0);
        var codamount = $('#txtCODAmount').val();

        if ($('#txtCODReceived').val() == "")
            $('#txtCODReceived').val(0);

        var codrecevied = $('#txtCODReceived').val();

        if ($('#txtDiscount').val() == "")
            $('#txtDiscount').val(0);

        var discount = $('#txtDiscount').val();

        var totalamount = parseFloat(codrecevied) + parseFloat(discount);
        if (parseFloat(codrecevied) > parseFloat(codamount)) {
            $('#txtCODReceived').val(parseFloat(codamount).toFixed(2));
        }
        else if (parseFloat(totalamount) > parseFloat(codamount)) {
            $('#txtCODReceived').val(parseFloat(codamount).toFixed(2));
            $('#txtDiscount').val(0);
        }
        else if (parseFloat(codrecevied) > 0 && (parseFloat(codrecevied) < parseFloat(codamount))) {
            var discount = parseFloat(codamount) - parseFloat(codrecevied);
            $('#txtDiscount').val(parseFloat(discount).toFixed(2));
        }

    }

    function checkMCReceived() {

        if ($('#txtMCCost').val() == "")
            $('#txtMCCost').val(0);

        var mcamount = $('#txtMCCost').val();

        if ($('#txtMCReceived').val() == "")
            $('#txtMCReceived').val(0);

        var mcreceived = $('#txtMCReceived').val();
                     

        
        if (parseFloat(mcreceived ) > parseFloat(mcamount)) {
            $('#txtMCReceived').val(parseFloat(mcamount).toFixed(2));
        }
        else {
            $('#txtMCReceived').val(parseFloat(mcreceived).toFixed(2));
        }

    }
    function CheckAmt(x) {
        debugger;
        var idindex = $(x).attr('id');
        var thisval = $(x).val();
        var maxval = $(x).attr('max');
        if (parseFloat(thisval) > parseFloat(maxval)) {
            $(x).val(parseFloat(maxval).toFixed(2));
        }       
        
    }

    function CheckAmt1(x) {
        var thisval = $(x).val();
        $(x).attr('value', thisval);
        thisval = $(x).val();
        if (thisval == null || thisval == "") {
            $(x).val('0.000');
        } else {
            $(x).val(parseFloat(thisval).toFixed(@_decimal));
        }

    }
        
</script>
<script>
    function calculatetotal() {
     
        var maxrow = $('#tblTrans > tr').length;
        var totalcod = 0;
        var totaldiscount = 0;
        var totalmc = 0;
        var totalreceipt = 0;
        var totalexp = 0;
        var totalpkp = 0;
        var totalall = 0;

        for (i = 0; i < maxrow; i++) {
            var deleted = $('#hdndeleted_' + i).val();
            if (deleted == 'false') {
                debugger;
                var COD = $('#hdncod_' + i).val();
                var MCReceived = $('#hdnmc_' + i).val();
                var receipt = $('#hdnreceipt_' + i).val();
                var exp = $('#hdnexp_' + i).val();
                var pkp = $('#hdnpkp_' + i).val();
                var discount = $('#hdndiscount_' + i).val();
                var total = $('#hdntotal_' + i).val();
                if (COD == '')
                    COD = 0;
                if (discount == '')
                    discount = 0;
                if (MCReceived == '')
                    MCReceived = 0;
                if (receipt == '')
                    receipt = 0;
                if (exp == '')
                    exp = 0;
                if (pkp == '')
                    pkp = 0;
                if (total == '')
                    total = 0;

                totalcod = parseFloat(totalcod) + parseFloat(COD);
                totaldiscount = parseFloat(totaldiscount) + parseFloat(discount);
                totalmc = parseFloat(totalmc) + parseFloat(MCReceived);
                totalreceipt = parseFloat(totalreceipt) + parseFloat(receipt);
                totalexp = parseFloat(totalexp) + parseFloat(exp);
                totalpkp = parseFloat(totalpkp) + parseFloat(pkp);
                totalall = parseFloat(totalall) + parseFloat(total);
            }
            $('#txtTotalCOD').val(parseFloat(totalcod).toFixed(2));
            $('#txtTotalDiscount').val(parseFloat(totaldiscount).toFixed(2));
            $('#txtTotalMC').val(parseFloat(totalmc).toFixed(2));
            $('#txtTotalReceipt').val(parseFloat(totalreceipt).toFixed(2));
            $('#txtTotalPKP').val(parseFloat(totalpkp).toFixed(2));
            $('#txtTotalExp').val(parseFloat(totalexp).toFixed(2));
            $('#txtTotal').val(parseFloat(totalall).toFixed(2));
            $('#txtDRSReceipt').val(parseFloat($('#ReceivedAmount').val()).toFixed(2));
            var shortage = parseFloat($('#txtDRSReceipt').val()) - parseFloat($('#txtTotal').val()) ;// - parseFloat(totalall);
            if (shortage > 0) {
                $('#lbshortage').html('EXCESS');
                $('#txtShortage').val(parseFloat(shortage).toFixed(2));
                $('#txtShortage').removeClass('cred');
            }
            else {
                $('#lbshortage').html('SHORTAGE');
                $('#txtShortage').val(parseFloat(shortage).toFixed(2));
                
                $('#txtShortage').addClass('cred');
            }

            
        }
    }
    $(document).ready(function () {
        $('#btnSave').click(function () {
            $('#btnSave').attr('disabled', 'disabled');
            var obj = [];
            var maxrow = $('#tblTrans > tr').length;
            for (i = 0; i < maxrow; i++) {
                var deleted = $('#hdndeleted_' + i).val(); 
                if (deleted == 'false') {
                    debugger; 
                    var DRRID = $('#DRRID').val();
                    var DRSID =$('#DRSID').val();
                    var DRSRecPayId = $('#DRSRecPayID').val();
                    var DeliveredBy = $('#DeliveredBy').val();
                    var referenceid = $("#hdnrefId_" + i).val();
                    var type = $("#hdntype_" + i).val();
                    var Reference = $("#hdnref_" + i).val();
                    var COD = $('#hdncod_' + i).val();
                    var Discount = $('#hdndiscount_' + i).val();
                    var MCReceived = $('#hdnmc_' + i).val();
                    var receipt = $('#hdnreceipt_' + i).val();
                    var exp = $('#hdnexp_' + i).val();
                    var pkp = $('#hdnpkp_' + i).val();
                    var total = $('#hdntotal_' + i).val();
                    var item = {
                        ReferenceId: referenceid,
                        Type:type,
                        Reference: Reference,
                        COD: COD,
                        Discount:Discount,
                        MCReceived: MCReceived,
                        Receipt: receipt,
                        PKPCash: pkp,
                        Expense: exp,
                        Total: total
                    }
                    obj.push(item);
                }

                if (maxrow == (i + 1)) {
                    debugger;
                    $.ajax({
                        type: "POST",
                        url: "/DRSReconc/SaveReconc",
                        datatype: "Json",
                        data: { DRRID: DRRID, DRSID: DRSID, DRSRecPayId: DRSRecPayId, ReconcAmount:0, CourierId:DeliveredBy,Details: JSON.stringify(obj) },
                        success: function (response) {
                            if (response == "Ok") {
                                //alert("Reconciliation Saved Succesfully");
                                $.notify("Reconciliation Saved Succesfully", "success");
                                $('#btnSave').removeAttr('disabled');                               
                                location.href = '@Url.Action("Index","DRSReconc")';
                            }
                            else {
                                alert(response);
                                $('#btnSave').removeAttr('disabled');
                                //$.notify(response.message, "warning");
                                return false;
                            }
                        }
                    });
                }
            }


        });
    });
</script>
<section class="content-header">
    <div class="row">
        <div class="col-md-5 pull-left">
            <h1 class="headingfont">@ViewBag.Title</h1>
        </div>       

    </div>
    <div class="row">

    </div>
</section>

<!-- Main content -->
<section class="content">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.DRRID)
        @Html.HiddenFor(model => model.DRSRecPayID)
        @*@Html.HiddenFor(model => model.StatusEntry)*@
        @Html.HiddenFor(model => model.AcJournalID)
        @Html.HiddenFor(model => model.ReconciledAmount)
        <div class="row  drsReceipt" >
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel required">DRS Receipt No.</label>
                @Html.TextBoxFor(model => model.DRSReceiptNo, new { @class = "form-control" })
                
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Receipt Date</label>
                @Html.TextBoxFor(model => model.ReceiptDate, new { @class = "form-control text-right", @required = true,@readonly="readonly" })
            </div>
            <div class="col-xs-2 col-sm-2">
                <label class="headinglabel">Receipt Amount</label>
                @Html.TextBoxFor(model => model.ReceivedAmount, new { @class = "form-control text-right",@readonly="readonly" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class=" required headinglabel">DRS No.</label>
                @Html.TextBoxFor(model => model.DRSNo, new { @class = "form-control",@readonly="readonly" })
                @Html.HiddenFor(mode => Model.DRSID)
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel required">DRS Date</label>
                @Html.TextBoxFor(model => model.DRSDate, new { @class = "form-control" , @readonly = "readonly" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel required">Delivered By</label>
                @Html.DropDownListFor(model => model.DeliveredBy, new SelectList(ViewBag.Deliverdby, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            @*<div class="col-md-1 hide">
                <button class="btn btn-primary" type="button" id="btnsearch" style="margin-top:33px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i> </button>
            </div>*@
        </div>
    }
    <div class="row no-margin">
        <div class="drsAwb col-lg-3">
            <button class="accordion">Airway Bills</button>
            <div class="panel">
                <div id="divAWB">
                   
                    <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-12" id="divawbdetail">
                            <ul>
                                <li>
                                    <label class="headinglabel">AWB No.</label>
                                    <input type="text" id="txtAWB" class="form-control ui-autocomplete-input" autocomplete="off" style="border-radius: 5px;">
                                    <input type="hidden" id="txtInScanID" class="form-control">
                                </li>
                                <li>
                                    <label class="headinglabel">AWB Date:</label>
                                    <input type="text" id="txtAWBDate" class="form-control" value="03/10/2021" readonly="" style="border-radius: 5px;">
                                </li>
                                <li>
                                    <label class="headinglabel">Shipper :</label> <input type="text" id="txtShipper" class="form-control" value="" readonly="" style="border-radius: 5px;">
                                </li>
                                <li>
                                    <label class="headinglabel">Consignee :</label>  <input type="text" class="form-control" id="txtConsignee"  value="" readonly="" style="border-radius: 5px;"> 
                                </li>
                                <li class="row">
                                    <div class="col-md-6">
                                    <label class="headinglabel">Pc :</label>
                                    <input type="text" name="" class="form-control" id="txtPieces" value="" readonly="" style="border-radius: 5px;"> 
                                </div>
                                <div class="col-md-6">
                                    <label class="headinglabel">Weight:</label>
                                    <input type="text" class="form-control" name="" id="txtWeight" value="" readonly style="border-radius: 5px;"> 
                                </div>

                                </li>
                                <li>
                                    <label class="headinglabel">Shipping Instructions:</label>
                                     <input type="text" class="form-control" id="txtInstructions" value="Shipping Instructions" readonly="" style="border-radius: 5px;"> 
                                </li>
                            </ul>

                        </div>
                    </div>


                    <!--<div class="row no-margin" style="padding-top:10px">
                    <div class="col-md-6">
                        <label class="headinglabel">POD Update</label>
                        <input type="text" id="txtPOD" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label class="headinglabel">Received By</label>-->
                    @*<input type="text" id="txtReceivedBy" class="form-control" />*@
                    <!--@Html.DropDownList("ReceivedBy", new SelectList(ViewBag.Deliverdby, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                        </div>

                    </div>
                    <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-6">
                            <label class="headinglabel">Delivered Date &  Time</label>
                            <input type="text" id="txtDeliveredDate" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Delivered By</label>-->
                    @*<input type="text" id="txtDeliveredBy" class="form-control" />*@
                    <!--@Html.DropDownList("DeliveredBy1", new SelectList(ViewBag.Deliverdby, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                        </div>
                    </div>-->

                    <div class="row no-margin" >
                        <div class="col-md-6">
                            <label class="headinglabel">COD Amount</label>
                            <input type="text" id="txtCODAmount" class="form-control text-right" readonly />
                        </div>
                        <div class="col-md-3">
                            <label class="headinglabel">Received</label>
                            <input type="text" id="txtCODReceived" class="form-control text-right"  onchange="checkCODReceived()"/>
                        </div>
                        <div class="col-md-3">
                            <label class="headinglabel">Discount</label>
                            <input type="text" id="txtDiscount" class="form-control text-right" onchange="checkCODDiscount()"/>
                        </div>
                    </div>

                    <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-6">
                            <label class="headinglabel">MC Amount</label>
                            <input type="text" id="txtMCCost" class="form-control text-right" readonly />
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">MC Received</label>
                            <input type="text" id="txtMCReceived" class="form-control text-right" onchange="checkMCReceived()" />
                        </div>
                    </div>




                    <div class="row no-margin" style="padding-top: 10px">
                        <div class="col-md-12 btn-right">
                            <input type="submit" class="btn btn-primary  btnwidth" value="Add AWB" id="btnAddAWB" name="Command" />

                            @*<a href='@Url.Action("Index", "DRSReconc", new { id = 0 })' class="btn btn-danger  btnwidth">Cancel</a>*@
                        </div>
                    </div>

                </div>
            </div>

            <button class="accordion">Invoice</button>
            <div class="panel">
                <div class="row no-margin" style="padding-top:10px">
                    <div class="col-md-11">
                        <label class="headinglabel">Customer</label>
                        <input type="text" id="txtCustomer" class="form-control" />
                        <input type="hidden" id="txtCustomerId" class="form-control" />
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-primary small_btn" style="margin-top:20px" type="button" id="btnsearchInvoice" ><i class="fa fa-refresh" aria-hidden="true"></i> </button>
                    </div>

                </div>
                <div class="row no-margin" style="padding-top:10px">
                    <table border="1" style="margin-top: 15px; " class="table table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th>
                                    Invoice No.
                                </th>
                                @*<th>
                                        Invoice Date
                                    </th>*@
                                <th>
                                    Amount
                                </th>
                                <th>
                                    Received
                                </th>
                            </tr>
                        </thead>
                        <tbody id="tblinvoice">
                        </tbody>
                    </table>
                </div>
                <div class="row no-margin" style="padding-top: 10px">
                    <div class="col-md-12 btn-right">
                        <input type="submit" class="btn btn-primary  btnwidth" value="Add Invoice" id="btnAddInvoice" name="Command" />
                    </div>
                </div>
            </div>

            <button class="accordion">New AWB</button>
            <div class="panel">
                <div class="row no-margin" style="padding-top:10px">
                    <table border="1" style="margin-top: 15px; " class="table table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th>
                                    AWB No.
                                </th>
                                <th>
                                    Amount
                                </th>
                                <th>

                                </th>


                            </tr>
                        </thead>
                        <tbody id="tblNewAWB">
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>
                                    <input type="text" id="txtNewAWB" class="form-control" placeholder="Enter New AWB" />
                                    <input type="hidden" id="txtNewAWBInscanId" class="form-control" value="0" />
                                </td>
                                <td>
                                    <input type="text" id="txtNewAWBAmount" class="form-control text-right" placeholder="Enter Charge" />
                                </td>
                                <td>
                                    <a href="Javascript:void(0);" id="btnAddMoreAWB"><i class="fa fa-plus"></i></a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="row no-margin" style="padding-top: 10px">
                    <div class="col-md-12 btn-right">
                        <input type="submit" class="btn btn-primary  " value="Add New AWB" id="btnAddNewAWB" name="Command" />
                    </div>
                </div>
            </div>
            <button class="accordion">Expenses</button>
            <div class="panel">
                <div class="row no-margin" style="padding-top:10px">
                    <table border="1" style="margin-top: 15px; " class="table table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th>
                                    Chart of Acccount
                                </th>
                                <th>
                                    Amount
                                </th>
                                @*<th>
                                        Narration
                                    </th>*@
                                <th>

                                </th>


                            </tr>
                        </thead>
                        <tbody id="tblExpenses">
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>
                                    <input type="text" id="txtExpAccountHead" class="form-control" placeholder="Select A/C" />
                                    <input type="hidden" id="txtExpAccountHeadId" class="form-control" placeholder="Exp Amount" />
                                </td>
                                <td>
                                    <input type="text" id="txtExpAmount" class="form-control text-right" />
                                </td>
                                <td>
                                    <a href="Javascript:void(0);" id="btnAddMoreAcc"><i class="fa fa-plus"></i></a>
                                </td>
                            </tr>
                            @*<tr>
                                    <td colspan="3">
                                        <input type="text" id="txtExpNarration" class="form-control" />
                                    </td>
                                </tr>*@
                        </tfoot>
                    </table>
                </div>
                <div class="row no-margin" style="padding-top: 10px">
                    <div class="col-md-12 btn-right">
                        <input type="submit" class="btn btn-primary  btnwidth" value="Add Exp" id="btnAddExpense" name="Command" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9">
            <table border="1"  class="table table-bordered table-responsive">
                <thead>
                    <tr style="font-weight: bold">
                        <th>Reference</th>
                        <th>COD</th>
                        <th>Discount</th>
                        <th>Material Cost</th>
                        <th>C.Receipt</th>
                        <th>Pickup Cash</th>
                        <th>Expenses</th>
                        <th>Total</th>
                        <th></th>
                        
                    </tr>
                </thead>
                <tbody id="tblTrans">
                    @if (@Model.DRRID > 0)
                    {
                        var i = 0;
                        foreach (var item in Model.Details)
                        {
                            <tr>
                                <td>
                                    <input type="hidden" id="hdntype_@i" value="@item.Type" />
                                    <input type="hidden" value="false" class="hdndeleted" id="hdndeleted_@i" />
                                    <input type="hidden" id="hdnrefId_@i" value="@item.ReferenceId" />
                                    <input type="hidden" id="hdnref_@i" value="@item.Reference" />
                                    <input type="hidden" id="hdncod_@i" value="@item.COD" />
                                    <input type="hidden" id="hdndiscount_@i" value="@item.Discount" />
                                    <input type="hidden" id="hdnmc_@i" value="@item.MCReceived" />
                                    <input type="hidden" id="hdnreceipt_@i" value="@item.Receipt" />
                                    <input type="hidden" id="hdnpkp_@i" value="@item.PKPCash" />
                                    <input type="hidden" id="hdnexp_@i" value="@item.Expense" />
                                    <input type="hidden" id="hdntotal_@i" value="@item.Total" />
                                    @item.Reference
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.COD, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.Discount, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.MCReceived, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.Receipt, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.PKPCash, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.Expense, "2")
                                </td>
                                <td>
                                    @CMSV2.Models.CommanFunctions.GetDecimalFormat1(item.Total, "2")
                                </td>
                                <td>
                                    <a href="#" onclick="deletetrans(this, @i)"><i class="fa fa-times"></i></a>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
                <tfoot>
                    <tr style="font-weight: bold">
                        <td>Total</td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalCOD" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalDiscount" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalMC" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalReceipt" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalPKP" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotalExp" value="0" /></td>
                        <td><input type="text" class="form-control text-right" readonly id="txtTotal" value="0" /></td>
                        
                    </tr>
                    <tr>
                        <td colspan="6" class="text-right">
                            DRS Receipt
                        </td>
                        <td colspan="2">
                            <input type="text" class="form-control text-right" id="txtDRSReceipt" value="@Model.ReceivedAmount" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6" class="text-right">
                            <label id="lbshortage">SHORTAGE</label>
                        </td>
                        <td colspan="2">
                            <input type="text" class="form-control text-right" id="txtShortage" value="0" />
                        </td>
                    </tr>
                    @*<tr>
                            <td colspan="6" class="text-right">
                                TOTAL
                            </td>
                            <td colspan="2">

                            </td>
                        </tr>*@
                </tfoot>
            </table>
            <div class="row no-margin" style="padding-top: 10px">
                <div class="col-md-12 btn-right">
                    <input type="submit" class="btn btn-primary  btnwidth" value="Save" id="btnSave" name="Command" />
                    <a href='@Url.Action("Index", "DRSReconc", new { id = 0 })' class="btn btn-danger  btnwidth">Cancel</a>
                </div>
            </div>
        </div>

    </div>


</section>


            <div>
            </div>

            <script type="text/javascript">
                 function ValidateTotal() {
                    debugger;
                    var TotalAmount = 0;
                    var idtext = 'txtinvoice_';
                    var amt = 0;
                    if ($('#Balance').val() == "") {
                        $('#Balance').val(0);
                    }
                    var balance =parseFloat($('#Balance').val());

                        $('[id^=' + idtext + ']').each(function (index, item) {
                        //  var id = $(item).attr('id').split('_')[1];
                        if ($(item).val() == "" || $(item).val()==null) {
                                $(item).val(0);
                        }
                        var paidamount = parseFloat($(item).val());
                        amt = amt + paidamount;

                        if (parseFloat(amt) == 0) {
                                $('#btnsave').attr('disabled', 'disabled');
                        }

                            @*if (parseFloat($('#FMoney').val()) == 0) {
                                $('#FMoney').val(parseFloat(amt).toFixed(@_decimal))
                            }*@
                            $('#AllocatedAmount').val(parseFloat(amt).toFixed(@_decimal));
                            var payingamount = parseFloat($('#FMoney').val());
                            var allocatedamount = parseFloat($('#AllocatedAmount').val());
                            var advance = 0;
                            if (allocatedamount > (payingamount + advance)) {
                                $('#btnsave').attr('disabled', 'disabled');
                            }
                            else if (parseFloat(amt) == 0) {
                                $('#btnsave').attr('disabled', 'disabled');
                            }
                            else {
                                $('#btnsave').removeAttr('disabled');
                            }

                            //$('#Balance').val(parseFloat(advance).toFixed(@_decimal));

                        });

                        //var TotalInvoiceAmount = parseFloat($('.TotalInvoiceAmount').val());
                        //if (TotalAmount > TotalInvoiceAmount) {
                        //    $('#msg1').show();
                        //    $('#msg1').text('Sum of Amount cannot be greater than Total Invoice Amount');
                        //    return false;
                        //} else {
                        //    return true;
                        //}
                    }
                // When the document is ready

                $(document).ready(function () {
                    var startdate = '@Session["FyearFrom"].ToString()';
                    var enddate = '@Session["FyearTo"].ToString()';
                    var sd = new Date(startdate);
                    var ed = new Date(enddate);
                    var datevalid = false;
                    var dateerror = "";

                    $('#txtDeliveredDate').datetimepicker({
                        format: 'DD-MM-YYYY HH:mm'
                    });
                    $('#txtDeliveredDate').datetimepicker({
                        date: new Date(1434544882775)
                    });

                    $('#DRSRecPayDate').datetimepicker({
                        format: 'DD-MM-YYYY'
                    });
                    $('#ChequeDate').datetimepicker({
                        format: 'DD-MM-YYYY'
                    });

                      $('#RecPayDate').keydown(function (e) {

                        if (e.keyCode == 13 || e.keyCode == 9) {
                            if ($("#RecPayDate").val() != "") {
                                $.ajax({
                                    url: "@Url.Action("CheckDateValidate", "Accounts")",
                                    data: { entrydate: $("#RecPayDate").val() },
                                    type: "GET",
                                    dataType: "json",
                                    success: function (response) {

                                        if (response.Status == "OK") {
                                            datevalid = true;
                                            dateerror = response.Message;
                                        }
                                        else {
                                            datevalid = false;
                                            dateerror = response.Message;
                                            $('#RecPayDate').val(response.ValidDate);
                                        }

                                    },
                                    error: function () {
                                        alert("Failed! Please try again.");
                                    }
                                });
                            }
                        }
                    });
                    $('#RecPayDate').change(function ()    {

                        if ($("#RecPayDate").val() != "") {
                             $.ajax({
                            url: "@Url.Action("CheckDateValidate", "Accounts")",
                                 data: { entrydate: $("#RecPayDate").val()},
                            type: "GET",
                            dataType: "json",
                                 success: function (response) {
                                if (response.Status == "OK") {
                                    datevalid = true;
                                    dateerror = response.Message;
                                }
                                else {
                                    datevalid = false;
                                    dateerror = response.Message;
                                    $('#RecPayDate').val(response.ValidDate);
                                    alert(dateerror);
                                }

                            },
                            error: function () {
                                alert("Failed! Please try again.");
                            }
                        });
                        }
                    });

                    $('#RecPayDate').on('dp.change', function (e) {
                        $('#RecPayDate').trigger('change');
                    })

                    $('#RecPayDate').datepicker("setDate", new Date());


                });

            </script>
