@model CMSV2.Models.AgentDatePicker
@{
    Layout = null;
}
<link href="/Content/Multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Content/Multiselect/bootstrap-multiselect.js"></script>
<style>
#invoicesearch .row .col-md-1 {
    width: 12%;
} 
.multiselect{
	 align-items: center;
    display: flex!Important;
    justify-content: space-around;
}
#movementid + .btn-group button,#movementid + .btn-group{
	display:block;
	width:100%;
	}
#FormDate{
    border-radius:10px;
}
</style>

<script>
     var customernames = [];
    $(document).ready(function () {

           //$.ajax({
           // type: "GET",
           // url: "/PickUpRequest/GetCustomerName",
           // datatype: "Json",
           // success: function (response) {
           //     debugger;
           //     customernames = response.data;
           //     $("#CustomerName").autocomplete({
           //         source: customernames
           //     });
           // }
           //});

          $("#CustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/COLoaderInvoice/GetCustomerName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                CustomerId: val.CustomerID,
                                type: val.CustomerType
                            }
                        }))
                    }
                })
            },
            minLength: 1,
              autoFocus: false,
              focus: function (event, ui) {
                  $("#CustomerName").val(ui.item.value);
                  $('#CustomerId').val(ui.item.CustomerId);
                  $('#CustomerID').val(ui.item.CustomerId);
              },
            select: function (e, i) {
                e.preventDefault();
                $("#CustomerName").val(i.item.label);
                $('#CustomerId').val(i.item.CustomerId);
                $('#CustomerID').val(i.item.CustomerId);
            },

        });








        $('#btnsearch').click(function () {

            if ($('#CustomerId').val() == 0 || $('#CustomerId').val() == '' ||$('#CustomerId').val() == null) {
                $('#CustomerName').focus();
                return false;
            }
           
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ShowItemList", "COLoaderInvoice")',
                datatype: "html",
                data: {
                    CustomerId: $('#CustomerId').val(), FromDate: $('#FromDate').val(), ToDate: $('#ToDate').val(), MAWB: $('#MAWB').val()
                },
                success: function (data) {
                    debugger;
                    $("#listContainer").html(data);
                    var max = $('#listbody > tr').length;
                    var html = $('#listbody > tr >td:first').html();
                    $('#TotalAWB').val(max);
                    if (html == 'No data available in table') {
                        $.notify("No Import Items are available!", "error");
                    }
                }
            });

    });
    });

    

</script>
@using (Html.BeginForm("InvoiceSearch", "AgentInvoice", FormMethod.Post, new { @id = "invoicesearch" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row no-margin ">
    <div class="col-md-4">
        <label class="headinglabel required ">Customer</label>
        @Html.HiddenFor(model => model.CustomerId)
        @*@Html.DropDownListFor(model => model.CustomerId, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"), "Select", new { @class = "form-control", @required = "true" })*@
        @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CustomerName)
    </div>
    <div class="col-md-1">
        <label class="headinglabel required ">From Date</label>
        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control text-right" })
    </div>
    <div class="col-md-1">
        <label class="headinglabel required">To Date</label>
        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control text-right" })
    </div>
    <div class="col-md-1">
        <label class="headinglabel required">MAWB</label>
        @Html.TextBoxFor(model => model.MAWB, new { @class = "form-control" })
    </div>

    <div class="col-md-1">
        <button class="btn btn-success" type="button" id="btnsearch" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
    </div>
</div>
   
}


