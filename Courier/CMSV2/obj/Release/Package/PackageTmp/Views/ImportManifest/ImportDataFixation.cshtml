@model CMSV2.Models.ImportManifestFixation
@{
    Layout = null;
}
<style>
    ul.ui-front {
        z-index: 1100;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
       
        $("#DestinationLocation").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetEventVenuesList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        if (data.length == 0) {
                            $('#EventVenueId').val("");
                            $('#VenueLocationMesssage').show();
                            return false;
                        }
                        else {
                            response($.map(data, function (item) {
                                return {
                                    label: item.description,
                                    value: item.place_id
                                }
                            }));
                        }
                    },
                    error: function (x, y, z) {
                        alert('error');
                    }
                });
            },
            messages: {
                noResults: "", results: ""
            },
            select: function (event, ui) {
                $('#DestinationLocation').val(ui.item.label);
                $('#PlaceId').val(ui.item.value);
                return false;
            }
        });
          $("#DestinationCountry").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetEventVenuesList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        if (data.length == 0) {
                            //$('#EventVenueId').val("");
                            //$('#VenueLocationMesssage').show();
                            return false;
                        }
                        else {
                            response($.map(data, function (item) {
                                return {
                                    label: item.description,
                                    value: item.place_id
                                }
                            }));
                        }
                    },
                    error: function (x, y, z) {
                        alert('error');
                    }
                });
            },
            messages: {
                noResults: "", results: ""
              },
            focus: function (event, ui) {
                  $('#DestinationCountry').val(ui.item.label);
                  //$('#PlaceId').val(ui.item.value);
                  return false;
              },
            select: function (event, ui) {
                $('#DestinationCountry').val(ui.item.label);
                //$('#PlaceId').val(ui.item.value);
                return false;
            }
          });

          $("#DestinationCity").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetEventVenuesList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        if (data.length == 0) {
                            //$('#EventVenueId').val("");
                            //$('#VenueLocationMesssage').show();
                            return false;
                        }
                        else {
                            response($.map(data, function (item) {
                                return {
                                    label: item.description,
                                    value: item.place_id
                                }
                            }));
                        }
                    },
                    error: function (x, y, z) {
                        alert('error');
                    }
                });
            },
            messages: {
                noResults: "", results: ""
              },
            focus: function (event, ui) {
                  $('#DestinationCity').val(ui.item.label);
                  //$('#PlaceId').val(ui.item.value);
                  return false;
              },
            select: function (event, ui) {
                $('#DestinationCity').val(ui.item.label);
                //$('#PlaceId').val(ui.item.value);
                return false;
            }
        });
        ///.autocomplete("widget").addClass("CitiesAutocomplete");

        $('#FieldName').change(function () {
            $('#DestinationLocation').attr('disabled', 'disabled');
            $('#DestinationCountry').attr('disabled', 'disabled');
            $('#DestinationCity').attr('disabled', 'disabled');
            $('#DestinationCity').attr('disabled', 'disabled');
            $('#DestinationValue').attr('disabled', 'disabled');
            if ($('#FieldName').val() == 'DestinationLocation') {
                $('#DestinationLocation').removeAttr('disabled');
            }
            else if ($('#FieldName').val() == 'DestinationCountry') {
                $('#DestinationCountry').removeAttr('disabled');
            }
            else if ($('#FieldName').val() == 'DestinationCity') {
                $('#DestinationCity').removeAttr('disabled');
            }
            else {
                $('#DestinationValue').removeAttr('disabled', 'disabled');
            }

        });
        $("#DestinationLocation").change(function () {

            $.ajax({
                type: "GET",
                url: "/ZoneChart/GetVenueDetailsByPlace",
                datatype: "Json",
                data: { placeId: $('#PlaceId').val() },
                success: function (response) {
                    debugger;
                    console.log(response);
                    $('#DestinationCountry').val(response.Country);
                    $('#DestinationCity').val(response.City);
                }
            });
        })
        $('#FieldName').trigger('change');
    });

</script>
<div class="row no-margin" style="margin-top:10px!important">
    <div class="col-md-12">
        <label class="headinglabel required">Selected Field Name</label>
        @Html.DropDownListFor(model => model.FieldName, new SelectList(@ViewBag.ImportFields, "FieldName", "FieldName"), "Select", new { @class = "form-control" })

    </div>
    @*<div class="col-md-6">
        <div class="flex justify-content-between">
            @Html.CheckBoxFor(model => model.AllItem, new { })
            <label class="headinglabel">All Item</label>

        </div>
    </div>*@

  

</div>
<div class="row no-margin" style="margin-top:10px!important">
    <div class="col-md-6">
        <label class="headinglabel required">Source Value</label>
        @Html.TextBoxFor(model => model.SourceValue, new { @class = "form-control", @required = "true", @placeholder = "Source Value" })
    </div>
    <div class="col-md-6" id="divdestination1">
        <label class="headinglabel">Target Value</label>
        @Html.TextBoxFor(model => model.DestinationValue, new { @class = "form-control", @required = "true", @placeholder = "Target Value" })
        <input type="hidden" id="PlaceId" value="" />
    </div>


</div>
<div class="row no-margin" style="margin-top:10px!important">
    <div class="col-md-12" id="divdestination2">
        <label class="headinglabel">Destination Location</label>
        @Html.TextBoxFor(model => model.DestinationLocation, new { @class = "form-control", @required = "true", @placeholder = "Target Value" })
    </div>
</div>

<div class="row no-margin" style="margin-top:10px!important">
        <div class="col-md-6">
            <label class="headinglabel">Country</label>
            @Html.TextBoxFor(model => model.DestinationCountry, new { @class = "form-control", @required = "true", @placeholder = "Destination Country" })
        </div>
        <div class="col-md-6" id="divdestination2">
            <label class="headinglabel">Destination City</label>
            @Html.TextBoxFor(model => model.DestinationCity, new { @class = "form-control", @required = "true", @placeholder = "Destination City" })
        </div>

 </div>

    <div class="row no-margin" style="margin-top:10px!important">
      
    </div>
