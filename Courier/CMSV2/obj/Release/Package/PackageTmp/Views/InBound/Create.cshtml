@model CMSV2.Models.InScanVM


@{
  
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}


    <script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />


<style type="text/css">
    .top-status label{
        color:#35b8eb;
        padding-right:10px;
    }

</style>
<script type="text/javascript">
    var AWBItems = [];
    var RemoveAWBItems = [];
    function showmessage(msg) {
        $('#validations').css('display', 'block');
        if (msg == '')
            $('#validations').val('Please fill required Details!');
        else {
            $('#validations').val(msg);
        }
    }
    function hidemessage() {
        $('#validations').css('display', 'none');

    }
    function deletetrans(obj, i) {
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
    }
    function checkduplicate(awbno) {
        debugger;
        var idtext = 'hdnAWbNo_';
        var maxrow = $('#listbody > tr').length;
        if (maxrow > 0) {
            var duplicate = false;
            $('[id^=' + idtext + ']').each(function (index, item) {
                var deleted = $('#hdndeleted_' + index).val();
                if (deleted != "true") {
                    var con = $('#hdnAWbNo_' + index).val();
                    if (con.trim() == awbno.trim()) {
                        duplicate = true;
                        var message = 'Duplicate AWB No.!';
                        $.notify('Duplicate AWB No.', 'error');
                        $('#txtawb').val('');
                        $('#txtawb').focus();
                        //break;
                    }

                    if (duplicate == false && index == (parseInt(maxrow - 1))) {
                        return true;
                    }
                }
            });
            if (duplicate == true) {
                return false;
            }
        }
        else {

            return true;
        }
    }
    $(document).ready(function () {
        AWBItems = [];

        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });



        $('#QuickInscanDateTime').datetimepicker({ format: 'DD-MM-YYYY HH:mm' });
        $('#txtImportDate').datetimepicker({ format: 'DD-MM-YYYY' });


          $("#txtMAWB").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/InBound/GetMAWBList',
                    datatype: "json",
                    data: {
                        term: request.term, ImportDate:$('#txtImportDate').val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.MAWB,
                                value: val.value
                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtMAWB").val(i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtMAWB").val(i.item.label);
              }
          });

        $("#txtawb").change(function () {
            if ($("#txtawb").val().trim() != '') {
                $('#btAdd').attr('disabled', 'disabled');
                $('#btnadd').trigger('click');
                return;
            }

        });
        $("#btnadd").click(function () {
            debugger;
            if ($("#txtawb").val().trim() == '') {
                return;
            }
            else if (checkduplicate($('#txtawb').val()) == false) {
                return;
            }
            else {
                $('#btnadd').attr('disabled', 'disabled');
            }

            $.ajax({
                type: "POST",
                url: "/InBound/GetAWBDetail",
                datatype: "Json",
                data: { id: $("#txtawb").val() },
                success: function (response) {
                    if (response.status == "ok") {
                        $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ShowAWBList", "InBound")',
                        datatype: "html",
                        success: function (data) {
                            $("#listContainer").html(data);
                            $('#btnadd').removeAttr('disabled');
                            $("#txtawb").val('');
                            $("#txtawb").focus();
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });


                        var data = response.data;
                        AWBItems = [];
                        AWBItems.push(data);
                        // var i = $('#details tr').length - 1;
                        //$("#details").append('<tr>' + '<td id= >' + data.AWB + '<input type="hidden" value=' + $("#txtawb").val() + ' name="lst[' + i + '].AWB"></td><td><a href="javascript:void(0);" class="rem">Remove</a></td></tr>');
                        //$("#details").append('<tr awbno="' + $("#txtawb").val() + '">' + '<td>' + data.AWB + '</td><td>' + data.Origin + '</td><td>' + data.Destination + '</td><td><a awbno="' + $("#txtawb").val() + '" href="javascript:void(0);" class="rem">Remove</a></td></tr>');
                      //  $("#detailsbody").html('');
                        $.each(AWBItems, function (index, item) {
                            debugger;
                            var i = $('#detailsbody > tr').length;
                            // $('#details tr').length - 1;
                            var datahtml = '<input type="hidden" class="hdndeleted" id="hdndeleted_' + i + '"  value="false" /> <input type="hidden" id="hdnAWbNo_' + i + '"  value="' + item.AWB + '" />  <input type="hidden" id="hdnInScanId_' + i + '"  value="' + item.ShipmentDetailID + '" /> '
                            $("#detailsbody").append('<tr awbno="' + item.AWB + '"><td>' + datahtml + (parseInt(i) + 1) + '</td><td>' + item.AWB + '</td><td>' + item.OriginCountry + '</td><td>' + item.DestinationCountry + '</td><td>' + item.Shipper + '</td><td>' + item.Receiver + '</td><td><a awbno="' + item.AWB + '" href="javascript:void(0);" onclick="deletetrans(this,' + i + ')" class="rem">Remove</a></td></tr>');
                        });
                        $('#btnadd').removeAttr('disabled');
                        $("#txtawb").val('');
                        $("#txtawb").focus();
                    }
                    else {
                        $('#btnadd').removeAttr('disabled');
                        $("#txtawb").focus();
                        alert(response.message);
                    }
                }


            });
        });

        $('#btnaddall').click(function () {
            var checkall = $('#CheckAll').prop('checked');
            if ($("#txtImportDate").val().trim() == '') {
                return;
            }
            else if ($("#txtMAWB").val().trim() == '') {
                return;
            }
            else {
                $('#btnaddall').attr('disabled', 'disabled');
            }
             $.ajax({
                type: "Get",
                 url: "/InBound/GetMAWBDetail",
                datatype: "Json",
                 data: {
                     ImportDate: $("#txtImportDate").val(), MAWB: $('#txtMAWB').val(), checkall:checkall },
                 success: function (response) {
                     if (response.status == "ok") {
                         $.ajax({
                             type: 'POST',
                             url: '@Url.Action("ShowAWBList", "InBound")',
                             datatype: "html",
                             success: function (data) {
                                 $("#listContainer").html(data);
                                 $('#btnaddall').removeAttr('disabled');
                                 $("#txtawb").val('');
                                 $("#txtawb").focus();
                             },
                             error: function (err) {
                                 console.log(err);
                             }
                         });
                     }
                     else {
                         $('#btnaddall').removeAttr('disabled');
                     }
                 }
            });
        });


        //$("#InScanSheetNo").change(function () {
        function DisplayAWBItems() {
            debugger;
          //  $('#details tr').slice(1).remove();
            $.ajax({
                type: "POST",
                url: "/InBound/GetAWB",
                datatype: "Json",
                data: { id: $("#QuickInscanID").val() },  //$("#CollectedByID option:selected").val()
                success: function (response) {
                    debugger;
                    console.log(response);
                    if (response.status == "ok") {
                        var quickinscan = response.masterdata;
                        $('#QuickInscanID').val(quickinscan.QuickInscanID);
                        $('#DepotID').val(quickinscan.DepotId).trigger('change');
                        $('#VehicleId').val(quickinscan.VehicleId).trigger('change');
                        $('#DriverName').val(quickinscan.DriverName);
                        $('#AgentID').val(quickinscan.AgentID).trigger('change');
                        $('#ReceivedByID').val(quickinscan.ReceivedByID).trigger('change');
                        var myDate = new Date(quickinscan.QuickInscanDateTime.match(/\d+/)[0] * 1);
                        var cmon = myDate.getMonth() + 1;
                        var inscandate = myDate.getDate() + "-" + cmon + "-" + myDate.getFullYear() + ' ' + myDate.getHours() + ':' + myDate.getMinutes();
                        $('#QuickInscanDateTime').val(inscandate);
                        AWBItems = [];
                        AWBItems = response.data;

                       $("#detailsbody").html('');
                $.each(AWBItems, function (index, item) {
                            debugger;
                            // $('#details tr').length - 1;
                    $("#detailsbody").append('<tr awbno="' + item.AWB + '"><td>' + (parseInt(index) + 1) + '</td><td>' + item.AWB + '</td><td>' + item.OriginCountry + '</td><td>' + item.DestinationCountry + '</td><td>' + item.Shipper + '</td><td>' + item.Receiver + '</td><td></td></tr>');
                    //<a awbno="' + item.AWB + '" href="javascript:void(0);" onclick="deletetrans(this,' + i + ')" class="rem">Remove</a>
                        });

                    }
                    else {
                        AWBItems = [];
                          $("#detailsbody").html('');
                        $('#QuickInscanID').val('');
                        $('#DepotID').val('').trigger('change');
                        $('#VehicleId').val(0).trigger('change');
                        $('#DriverName').val('');
                        $('#CollectedByID').val(0).trigger('change');
                        $('#ReceivedByID').val(0).trigger('change');
                          var d = new Date();
                        var curr_date = d.getDate();
                        var curr_month = d.getMonth()+1;
                        var curr_year = d.getFullYear();
                        var reqdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
                         $('#QuickInscanDateTime').val(reqdate);

                    }

                }
            });
        }
        $('#btnsave').click(function () {
            debugger;
            if ($('#QuickInscanDateTime').val() == '') {
                showmessage();
                $('#QuickInscanDateTime').focus();
                return;
            }
            //else if ($('#DepotID').val() == '') {
            //    showmessage();
            //    $('#DepotID').focus();
            //    return;
            //}
            //else if ($('#AgentID').val() == '') {
            //    showmessage();
            //    $('#AgentID').focus();
            //    return;
            //}
            else if ($('#ReceivedByID').val() == '') {
                showmessage();
                $('#ReceivedByID').focus();
                return;
            }
            //else if ($('#VehicleId').val() == '') {
            //    showmessage();
            //    $('#VehicleId').focus();
            //    return;
            //}

            hidemessage();

            var obj = [];
            var maxrow = $('#listbody > tr').length;
            if (maxrow == 0) {
                $.notify('AWB Not added,could not save!');
                return;
            }
            $('#btnsave').attr('disabled', 'disabled');
            for (i = 0; i < maxrow; i++) {
                //var deleted = $('#hdndeleted_' + i).val();
                var checked = $('#hdnawbchecked_' + i).prop('checked');
                if (checked) {
                    var item = {
                        AWB: $('#hdnawbchecked_' + i).attr('awb'), //$('#hdnAWbNo_' + i).val(),
                        InScanId: $('#hdnawbchecked_' + i).attr('shipmentdetailid'), // $('#hdnInScanId_' + i).val(),
                        Origin: "",
                        Destination: "",
                        AWBChecked: checked
                    }
                    obj.push(item);
                }
                if (maxrow == (i + 1) && obj.length > 0) {

                    var saveobj = {
                        QuickInscanID: $('#QuickInscanID').val(),
                        DepotID: $('#DepotID').val(),
                        DepotName: "",
                        InScanSheetNo: $('#InScanSheetNo').val(),
                        VehicleId: $('#VehicleId').val(),
                        DriverName: $('#DriverName').val(),
                        BranchId: 0,
                        UserId: 0,
                        AgentID: $('#AgentID').val(),
                        ReceivedByID: $('#ReceivedByID').val(),
                        QuickInscanDateTime: $('#QuickInscanDateTime').val(),
                        //SelectedInScanId: SelectedInScanId,
                        //RemovedInScanId: RemovedAWB,
                        Details: JSON.stringify(obj)
                    }

                    $.ajax({
                        type: "POST",
                        url: "/InBound/SaveQuickInScan",
                        datatype: "Json",
                        data: saveobj,
                        success: function (response) {
                            if (response.status == "ok") {
                                $.notify("Import InScan Saved Succesfully!", "success");
                                        $('#btnsave').removeAttr('disabled');
                                        window.location = "/InBound/Index";
                            }
                            else {
                                $('#btnsave').removeAttr('disabled');
                                $.notify(response.message, "warning");

                            }
                        }
                    });
                }
                else if (maxrow == (i + 1) && obj.length == 0) {
                    $.notify('AWB are not selected,could not save!');
                    $('#btnsave').removeAttr('disabled');
                    return;
                }
            }

        });

        if (@ViewBag.EditMode== true) {
            $('#btnaddall').attr('disabled', 'disabled');
            $('#txtImportDate').attr('disabled', 'disabled');
            $('#txtMAWB').attr('disabled', 'disabled');
            $('#CheckAll').attr('disabled', 'disabled');
        }

        $("#InScanSheetNo").focus();
    });

</script>
<style type="text/css">
    
    .search_grid_table #DetailsTable_filter label{
        display: block;
    }
 .search_grid_table #DetailsTable_filter input{
    width: calc(25% - 60px);
    margin-left: 10px;
}

</style>

<section class="content-header">

    <div class="flex justify-between">
    <h1 class="headingfont">
        Depot Inscan Import - Create       
    </h1>

    <div class="flex top-status">
    <label class="headinglabel">Status</label>
    <input type="text" id="txtStatus" class="form-control" value="Received at Nice Dubai Facility" readonly/>
   </div>
</div>

</section>

<section class="content">
    @if (TempData["SuccessMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["SuccessMsg"]", "success");
                 });
        </script>
    }
    else if (TempData["WarningMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["WarningMsg"]", "error");
                 });
        </script>
    }

    @using (Html.BeginForm("Create", "InBound", FormMethod.Post, new { @id = "inbound" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
        <fieldset>
            <div class="row">
            </div>
            <div class="row no-margin">
                <div class="col-md-2">
                    @Html.HiddenFor(model => model.QuickInscanID, new { })
                    @Html.HiddenFor(model => model.RemovedInScanId, new { })
                    @Html.HiddenFor(model => model.SelectedInScanId, new { @required = "true" })
                    <label class="headinglabel required">Inscan Sheet Number</label>
                    @Html.TextBoxFor(model => model.InScanSheetNo, new { @class = "form-control", @required = "true" })
                    @Html.ValidationMessageFor(model => model.InScanSheetNo)
                </div>
                <div class="col-md-2">
                    <label class="headinglabel required">InScan Date</label>

                    @Html.TextBoxFor(model => model.QuickInscanDateTime, new { @class = "form-control text-right", @required = "true" })
                    @Html.ValidationMessageFor(model => model.QuickInscanDateTime)
                </div>
                <div class="col-md-2">
                    <label class="headinglabel required">Depot</label>
                    @Html.DropDownListFor(model => model.DepotID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control", @required = "true" })
                </div>
                @*<div class="col-md-2">
                    <label class="headinglabel required">Agent</label>
                    @Html.DropDownListFor(model => model.AgentID, new SelectList(@ViewBag.Agents, "AgentID", "Name"), "Select", new { @class = "form-control", @required = "true" })
                </div>*@
                <div class="col-md-2">
                    <label class="headinglabel required">Received By</label>
                    @Html.DropDownListFor(model => model.ReceivedByID, new SelectList(@ViewBag.employeerec, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control", @required = "true" })
                </div>
                  <div class="col-md-2">
                    <label class="headinglabel">Vehicle Detail</label>
                    @Html.DropDownListFor(model => model.VehicleId, new SelectList(@ViewBag.Vehicles, "VehicleID", "VehicleDescription"), "Select", new { @class = "form-control" })
                    @Html.HiddenFor(model => model.VehicleId)

                </div>
                <div class="col-md-2">
                    <label class="headinglabel">Driver Name</label>
                    @Html.TextBoxFor(model => model.DriverName, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.DriverName)

                </div>

                 <div class="col-md-2">
                    <label class="headinglabel required">Tracking Number</label>
                    <input type="text" id="txtawb" class="form-control" />
                </div>
                <div class="col-md-1" >
                    <button type="button" id="btnadd" class="btn btn-primary sm_btn"><i class="fa fa-plus-circle" aria-hidden="true"></i></button>
                </div>

                   

               <div class="col-md-6 filter_box pull-right" style="margin-right: 8px;">
                    <h5>Filter By</h5>
                <div class="col-md-6">
                    <div >
                    <label class="headinglabel required">Manifest Date</label>
                </div>
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.ImportDate, new { @class = "form-control", @id = "txtImportDate" })
                        @*<input type="text" id="txtImportDate" class="form-control" />*@
                    </div>
                </div>
                <div class="col-md-5">
                 
                    <div class="col-md-12">
                        <div class="flexTitle">
                            <label class="headinglabel required">MAWB</label>
                            <div class="checkboxdesign no-padding  text-right" style="float:right">
                                @Html.CheckBox("CheckAll", new { @name = "CheckAll", @checked = "checked" }) &nbsp
                                <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important">Select All</label>
                            </div>
                        </div>
                        @Html.TextBoxFor(model => model.MAWB, new { @class = "form-control", @id = "txtMAWB" })
                        @*<input type="text" id="txtMAWB" class="form-control" />*@
                    </div>
                </div>
                <div class="col-md-1" >
                    <button type="button" id="btnaddall" class="btn btn-primary sm_btn"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                </div>

            </div>
               
            </div>
           
            <hr />

            <div class="row no-margin" style="padding-top:10px">
                <div class="col-md-12">
               
                 <div class=" btn-right" style="padding-top:0px;">
                <div class="row no-margin btn-right" style="padding-top:20px; padding-bottom:20px">
                        <div class="col-md-12">
                            <input type="button" value="Save" class="btn btn-primary btnwidth" data-toggle="tooltip" title="Click here" id="btnsave" />
                            <a href='@Url.Action("Index", "InBound")' class="btn btn-danger btnwidth" data-toggle="tooltip" data-placement="right" title="Click here" style="margin-left:5px;">Cancel</a>

                        </div>
                    </div>
                </div>
            
            </div>
</div>
            <div class="table-responsive tblbackground search_grid_table" style="padding: 15px;margin-top:20px;min-height:400px;max-height:400px;overflow-y: scroll;" id="listContainer">
                @{Html.RenderPartial("ItemList", Model);}
            </div>




        </fieldset>
    }
</section>
