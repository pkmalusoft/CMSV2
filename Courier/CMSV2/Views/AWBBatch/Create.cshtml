@model CMSV2.Models.AWBBatchVM
@{

    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var spath = "/DRSReceipt/Index/0";// System.Configuration.ConfigurationManager.AppSettings["spath"].ToString();
    var _decimal = @Session["Decimal"].ToString();
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style type="text/css">

    .searchMc {
        border: 2px solid #07a7e3;
        position: relative;
        padding: 30px 10px;
        margin: 20px 0;
    }

        .searchMc h4 {
            padding: 0 30px;
            position: ABSOLUTE;
            top: -21px;
            display: inline-block;
            left: 22px;
            background: #f8fbff;
            text-align: center;
        }

    .show-error {
        color: red;
    }

    .btnwidth {
        min-width: 100px;
        width: auto;
    }

    .searchMc .checkboxdesign {
        align-items: flex-start;
    }
</style>
<script type="text/javascript">
    var pickuplocation, deliverylocation;

    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        pickuplocation = new google.maps.places.Autocomplete(
            document.getElementById('PickUpLocation'));
        // When the user selects an address from the drop-down, populate the
        // address fields in the form.
        pickuplocation.addListener('place_changed', fillPickupLocation);

        deliverylocation = new google.maps.places.Autocomplete(
            document.getElementById('DeliveryLocation'), { types: [] });

        deliverylocation.addListener('place_changed', fillDeliveryLocation);

    }

    function fillPickupLocation() {

        // Get the place details from the autocomplete object.
        var place = pickuplocation.getPlace();
        var postcode = '';
        //GetEventVenuesList
        $.ajax({
            type: "GET",
            url: "/ZoneChart/GetEventVenuesList",
            datatype: "Json",
            data: { SearchText: $('#PickUpLocation').val() },
            success: function (response) {
                debugger;
                console.log(response);
                $('#OriginPlaceID').val(response[0].place_id);
            }
        });

        $.each(place.address_components, function (index, component) {
            var types = component.types;
            console.log(types);
            $.each(types, function (index, type) {
                if (type == 'postal_code') {
                    postcode = component.long_name;
                }
                else if (type == 'sublocality' || type == 'sublocality_level_1') {
                    $('#PickupSubLocality').val(component.long_name);
                }
            });
        });

    }

    function fillDeliveryLocation() {

        // Get the place details from the autocomplete object.
        var place = deliverylocation.getPlace();
        var postcode = '';
        //GetEventVenuesList
        $.ajax({
            type: "GET",
            url: "/ZoneChart/GetEventVenuesList",
            datatype: "Json",
            data: { SearchText: $('#DeliveryLocation').val() },
            success: function (response) {
                debugger;
                console.log(response);
                $('#DestinationPlaceID').val(response[0].place_id);
            }
        });

        $.each(place.address_components, function (index, component) {
            var types = component.types;
            console.log(types);
            $.each(types, function (index, type) {
                if (type == 'postal_code') {
                    postcode = component.long_name;
                }
                else if (type == 'sublocality' || type == 'sublocality_level_1') {
                    $('#DeliverySubLocality').val(component.long_name);
                }
            });
        });

    }


</script>
<script>
    function checkdata(obj)
    {
        var value = '';
        if ($(obj).val() == '' || $(obj).val() == undefined || $(obj).val() == 'undefined' ||$(obj).val() == null) {
            return '';
        }
        else {
            value = $(obj).val();
        }

        return value

    }
    function getdate(date) {
        var myDate = new Date(date);
        var cmon = myDate.getMonth() + 1;
        var entrydate = cmon + "/" + myDate.getDate() + '/' + myDate.getFullYear();
        return entrydate
    }
    function deletetrans(obj, i) {
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
    }

    $(document).ready(function () {

        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $("textarea").css({ "border-radius": "5px" });
        $('#BatchDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#AWBDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#AssignedDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#DeliveredDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#DelieveryAttemptDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#OutScanDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#ReceivedDate').datetimepicker({ format: 'DD-MMM-YYYY' });
        $('#PickedupDate').datetimepicker({ format: 'DD-MMM-YYYY' });

        $("#Shipper").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/QuickAWB/GetShipperName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ShipperName,
                                value: val.ShipperName,
                                AcHeadID: val.AcHeadID,
                                ContactPerson: val.ContactPerson,
                                Address1: val.Address1,
                                Address2: val.Address2,
                                Pincode: val.PinCode,
                                Phone: val.Phone,
                                CountryName: val.CountryName,
                                CityName: val.CityName,
                                LocationName: val.LocationName,
                                ConsignorMobileNo: val.ConsignorMobileNo

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, i) {
                $('#Shipper').val(i.item.value);
                $("#ConsignorContact").val(i.item.ContactPerson);
                $("#ConsignorAddress1_Building").val(i.item.Address1);
                $("#ConsignorAddress2_Street").val(i.item.Address2);

                $("#ConsignorAddress3_PinCode").val(i.item.Pincode);

                $("#ConsignorPhone").val(i.item.Phone);
                $("#ConsignorCountryName").val(i.item.CountryName);
                $("#ConsignorCityName").val(i.item.CityName);
                $("#ConsignorLocationName").val(i.item.LocationName);
                $("#PickUpLocation").val(i.item.LocationName);                
                console.log(i.item.ConsignorMobileNo);
                if (i.item.ConsignorMobileNo == null || i.item.ConsignorMobileNo == 'undefined' || i.item.ConsignorMobileNo=='')
                    $("#ConsignorMobileNo").val('');
                else
                    $("#ConsignorMobileNo").val(i.item.ConsignorMobileNo);
                
                
            },
            select: function (e, i) {
                e.preventDefault();
                $("#Shipper").val(i.item.label);
                $("#ConsignorContact").val(i.item.ContactPerson);
                $("#ConsignorAddress1_Building").val(i.item.Address1);
                $("#ConsignorAddress2_Street").val(i.item.Address2);

                $("#ConsignorAddress3_PinCode").val(i.item.Pincode);

                $("#ConsignorPhone").val(i.item.Phone);
                $("#ConsignorCountryName").val(i.item.CountryName);
                $("#ConsignorCityName").val(i.item.CityName);
                $("#ConsignorLocationName").val(i.item.LocationName);
                $("#PickUpLocation").val(i.item.LocationName);
                console.log(i.item.ConsignorMobileNo);
                if (i.item.ConsignorMobileNo == null || i.item.ConsignorMobileNo == 'undefined')
                    $("#ConsignorMobileNo").val('');
                else
                    $("#ConsignorMobileNo").val(i.item.ConsignorMobileNo);
                //fillPickupLocation();

            },

        });

        $("#Consignee").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/AWBBatch/GetReceiverName', //'/QuickAWB/GetConsigneeName',
                    datatype: "json",
                    data: {
                        term: request.term,Shipper :$('#Shipper').val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Name,
                                value: val.Name,
                                ContactPerson: val.ContactPerson,
                                Address1: val.Address1,
                                Address2: val.Address2,
                                Pincode: val.PinCode,
                                Phone: val.Phone,
                                CountryName: val.CountryName,
                                CityName: val.CityName,
                                LocationName: val.LocationName,
                                ConsigneeMobileNo :val.ConsigneeMobileNo

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, i) {
                $('#Consignee').val(i.item.value);
                $("#ConsigneeContact").val(i.item.ContactPerson);
                $("#ConsigneeAddress1_Building").val(i.item.Address1);
                $("#ConsigneeAddress2_Street").val(i.item.Address2);

                $("#ConsigneeAddress3_PinCode").val(i.item.Pincode);
                $("#ConsigneePhone").val(i.item.Phone);
                $("#ConsigneeCountryName").val(i.item.CountryName);
                $("#ConsigneeCityName").val(i.item.CityName);
                $("#ConsigneeLocationName").val(i.item.LocationName);
                $('#DeliveryLocation').val(i.item.LocationName);
                $("#ConsigneeLocation").val(i.item.LocationName);
                
                if (i.item.ConsigneeMobileNo == null || i.item.ConsigneeMobileNo=='undefined')
                    $("#ConsigneeMobileNo").val('');
                else
                    $("#ConsigneeMobileNo").val(i.item.ConsigneeMobileNo);
                //fillDeliveryLocation();
            },
            select: function (e, i) {
                e.preventDefault();
                $("#Consignee").val(i.item.label);
                $("#ConsigneeContact").val(i.item.ContactPerson);
                $("#ConsigneeAddress1_Building").val(i.item.Address1);
                $("#ConsigneeAddress2_Street").val(i.item.Address2);

                $("#ConsigneeAddress3_PinCode").val(i.item.Pincode);
                $("#ConsigneePhone").val(i.item.Phone);
                $("#ConsigneeCountryName").val(i.item.CountryName);
                $("#ConsigneeCityName").val(i.item.CityName);
                $("#ConsigneeLocationName").val(i.item.LocationName);
                $('#DeliveryLocation').val(i.item.LocationName);
                $("#ConsigneeLocation").val(i.item.LocationName);
                if (i.item.ConsigneeMobileNo == null || i.item.ConsigneeMobileNo == 'undefined')
                    $("#ConsigneeMobileNo").val('');
                else
                    $("#ConsigneeMobileNo").val(i.item.ConsigneeMobileNo);
                //fillDeliveryLocation();
            },

        });
        $('#btnAdd').click(function () {

            
            var AWBNo = $('#AWBNo').val();
            var AWBDate = $('#AWBDate').val();
            var Shipper = $('#Shipper').val();
            var CustomerID = 0;
            var ConsignorContact= $("#ConsignorContact").val();
            var ConsignorAddress1 = $("#ConsignorAddress1_Building").val();
            var ConsignorAddress2 = $("#ConsignorAddress2_Street").val();
            var ConsignorAddress3= $("#ConsignorAddress3_PinCode").val();
            var ConsignorPhone = $("#ConsignorPhone").val();
            var ConsignorMobileNo = checkdata($('#ConsignorMobileNo'));
            var ConsignorCountryName =$("#ConsignorCountryName").val();
            var ConsignorCityName = $("#ConsignorCityName").val();
            var ConsignorLocationName =$("#ConsignorLocationName").val()
            var Receiver = $('#Consignee').val();
            var ConsigneeContact = $("#ConsigneeContact").val();
            var ConsigneeAddress1= $("#ConsigneeAddress1_Building").val();
            var ConsigneeAddress2= $("#ConsigneeAddress2_Street").val()
            var ConsigneeAddress3 = $("#ConsigneeAddress3_PinCode").val();
            var ConsigneePhone = $("#ConsigneePhone").val();
            var ConsigneeCountryName = $("#ConsigneeCountryName").val();
            var ConsigneeCityName = $("#ConsigneeCityName").val();
            var ConsigneeLocationName = $("#ConsigneeLocationName").val();
            var ConsigneeMobileNo = checkdata($('#ConsigneeMobileNo'));
            var Pieces = $("#Pieces").val();
            var CourierCharge = $("#CourierCharge").val();
            var MaterialCost = $("#MaterialCost").val();
            var Weight = parseFloat($("#Weight").val()).toFixed(3);

            var PaymentTypeId = $("#PaymentTypeId").val();
            var PaymentTypetext = $("#PaymentTypeId option:selected").text();
            var PickUpLocation = $('#PickUpLocation').val();
            var DeliveryLocation = $('#DeliveryLocation').val();
            var ItemDescription = $('#ItemDescription').val();
            var AssignedEmployeeID = $('#AssignedEmployeeID').val() // Assigned for collection
            var PickedUpEmpID = $('#PickedUpEmpID').val(); //collected by
            var PickedupDate = $('#PickedupDate').val();;
            var ParcelTypeId = $('#ParcelTypeID').val();
            var ProductTypeID = $('#ProductTypeID').val();
            var MovementID = $('#MovementID').val();
            var OriginPlaceID = checkdata($('#OriginPlaceID'));;
            var DestinationPlaceID = checkdata($('#DestinationPlaceID'));
            var PickupSubLocality = checkdata($('#PickupSubLocality'));
            var DeliverySubLocality = checkdata($('#DeliverySubLocality'));
            var DepotReceivedBy = $('#DepotReceivedBy').val(); //employee name
            var AssignedDate = $('#AssignedDate').val();
            var AssignedForCollection = $('#AssignedForCollection').prop('checked');
            var ReceivedDate = $('#ReceivedDate').val(); //employee name
            var CollectedBy = $('#CollectedBy').prop('checked');
            var ReceivedBy = $('#ReceivedBy').prop('checked');
            var OutScanDelivery = $('#OutScanDelivery').prop('checked');
            var DeliveryAttempted = $('#DeliveryAttempted').prop('checked');
            var Delivered = $('#Delivered').prop('checked');
            var OutScanDeliveredID = $('#OutScanDeliveredID').val();
            var OutScanDate = $('#OutScanDate').val();
            var DeliveryAttemptedBy = $('#DeliveryAttemptedBy').val();
            var DelieveryAttemptDate = $('#DelieveryAttemptDate').val();
            var DeliveredBy = $('#DeliveredBy').val();
            var DeliveredDate = $('#DeliveredDate ').val();
            var InScanVehicleID = $('#InscanVehicleId ').val();
            var OutScanVehicleID = $('#OutscanVehicleId ').val();
            var i = $('#tbl1 > tr').length;
            var row = i + 1;
            var datahtml =
                '<span id="srow_' + i + '">' + row + '</span>' +
                '<input class="hdndeleted" type="hidden" value="false" id="hdndeleted_' + i + '" />' +
                '<input type="hidden" id="hdnAWBNo_' + i + '" value="' + AWBNo + '" />' +
                '<input type="hidden" id="hdnCustomerID_' + i + '" value="' + CustomerID + '" />' +
                '<input type="hidden" id="hdnConsignor_' + i + '" value="' + Shipper + '" />' +
                '<input type="hidden" id="hdnConsignorContact_' + i + '" value="' + ConsignorContact + '" />' +
                '<input type="hidden" id="hdnConsignorAddress1_' + i + '" value="' + ConsignorAddress1 + '"/>' +
                '<input type="hidden" id="hdnConsignorAddress2_' + i + '" value="' + ConsignorAddress2 + '"/>' +
                '<input type="hidden" id="hdnConsignorAddress3_' + i + '" value="' + ConsignorAddress3 + '"/>' +
                '<input type="hidden" id="hdnConsignorPhone_' + i + '" value="' + ConsignorPhone + '"/>' +
                '<input type="hidden" id="hdnConsignorCountryName_' + i + '" value="' + ConsignorCountryName + '"/>' +
                '<input type="hidden" id="hdnConsignorCityName_' + i + '" value="' + ConsignorCityName + '"/>' +
                '<input type="hidden" id="hdnConsignorLocationName_' + i + '" value="' + ConsignorLocationName + '"/>' +
                '<input type="hidden" id="hdnConsignee_' + i + '" value="' + Receiver + '"/>' +
                '<input type="hidden" id="hdnConsigneeContact_' + i + '" value="' + ConsigneeContact + '"/>' +
                '<input type="hidden" id="hdnConsigneeAddress1_' + i + '" value="' + ConsigneeAddress1 + '"/>' +
                '<input type="hidden" id="hdnConsigneeAddress2_' + i + '" value="' + ConsigneeAddress2 + '"/>' +
                '<input type="hidden" id="hdnConsigneeAddress3_' + i + '" value="' + ConsigneeAddress3 + '"/>' +
                '<input type="hidden" id="hdnConsigneePhone_' + i + '" value="' + ConsigneePhone + '"/>' +
                '<input type="hidden" id="hdnConsigneeCountryName_' + i + '" value="' + ConsigneeCountryName + '"/>' +
                '<input type="hidden" id="hdnConsigneeCityName_' + i + '" value="' + ConsigneeCityName + '"/>' +
                '<input type="hidden" id="hdnConsigneeLocationName_' + i + '" value="' + ConsigneeLocationName + '"/>' +
                '<input type="hidden" id="hdnAssignedEmployeeID_' + i + '" value="' + AssignedEmployeeID + '"/>' +
                '<input type="hidden" id="hdnAssignedForCollection_' + i + '" value="' + AssignedForCollection + '"/>' +
                '<input type="hidden" id="hdnAssignedDate_' + i + '" value="' + AssignedDate + '"/>' +
                '<input type="hidden" id="hdnCourierCharge_' + i + '" value="' + CourierCharge + '"/>' +
                '<input type="hidden" id="hdnPickedUpEmpID_' + i + '" value="' + PickedUpEmpID + '"/>' +
                '<input type="hidden" id="hdnPickedupDate_' + i + '" value="' + PickedupDate + '"/>' +
                '<input type="hidden" id="hdnPieces_' + i + '" value="' + Pieces + '"/>' +
                '<input type="hidden" id="hdnWeight_' + i + '" value="' + Weight + '"/>' +
                '<input type="hidden" id="hdnCargoDescription_' + i + '" value="' + ItemDescription + '"/>' +
                '<input type="hidden" id="hdnMovementID_' + i + '" value="' + MovementID + '"/>' +
                '<input type="hidden" id="hdnProductTypeID_' + i + '" value="' + ProductTypeID + '"/>' +
                '<input type="hidden" id="hdnTransactionDate_' + i + '" value="' + AWBDate + '"/>' +
                '<input type="hidden" id="hdnNetTotal_' + i + '" value="' + CourierCharge + '"/>' +
                '<input type="hidden" id="hdnParcelTypeId_' + i + '" value="' + ParcelTypeId + '"/>' +
                '<input type="hidden" id="hdnMaterialCost_' + i + '" value="' + MaterialCost + '"/>' +
                '<input type="hidden" id="hdnPaymentModeId_' + i + '" value="' + PaymentTypeId + '"/>' +
                '<input type="hidden" id="hdnDepotReceivedBy_' + i + '" value="' + DepotReceivedBy + '"/>' +
                '<input type="hidden" id="hdnReceivedDate_' + i + '" value="' + ReceivedDate + '"/>' +

                '<input type="hidden" id="hdnDocumentTypeId_' + i + '" value="1"/>' +
                '<input type="hidden" id="hdnOriginPlaceID_' + i + '" value="' + OriginPlaceID + '"/>' +
                '<input type="hidden" id="hdnDestinationPlaceID_' + i + '" value="' + DestinationPlaceID + '"/>' +
                '<input type="hidden" id="hdnPickupLocation_' + i + '" value="' + PickUpLocation + '"/>' +
                '<input type="hidden" id="hdnDeliveryLocation_' + i + '" value="' + DeliveryLocation + '"/>' +
                '<input type="hidden" id="hdnPickupSubLocality_' + i + '" value="' + PickupSubLocality + '"/>' +
                '<input type="hidden" id="hdnDeliverySubLocality_' + i + '" value="' + DeliverySubLocality + '"/>' +
                '<input type="hidden" id="hdnConsignorMobileNo_' + i + '" value="' + ConsignorMobileNo + '"/>' +
                '<input type="hidden" id="hdnConsigneeMobileNo_' + i + '" value="' + ConsigneeMobileNo + '"/>' +
                '<input type="hidden" id="hdnCollectedBy_' + i + '" value="' + CollectedBy + '"/>' +
                '<input type="hidden" id="hdnReceivedBy_' + i + '" value="' + ReceivedBy + '"/>' +
                '<input type="hidden" id="hdnOutScanDelivery_' + i + '" value="' + OutScanDelivery + '"/>' +
                '<input type="hidden" id="hdnDeliveryAttempted_' + i + '" value="' + DeliveryAttempted + '"/>' +
                '<input type="hidden" id="hdnDelivered_' + i + '" value="' + Delivered + '"/>' +
                '<input type="hidden" id="hdnOutScanDeliveredID_' + i + '" value="' + OutScanDeliveredID + '"/>' +
                '<input type="hidden" id="hdnOutScanDate_' + i + '" value="' + OutScanDate + '"/>' +
                '<input type="hidden" id="hdnDeliveryAttemptedBy_' + i + '" value="' + DeliveryAttemptedBy + '"/>' +
                '<input type="hidden" id="hdnDelieveryAttemptDate_' + i + '" value="' + DelieveryAttemptDate + '"/>' +
                '<input type="hidden" id="hdnDeliveredBy_' + i + '" value="' + DeliveredBy + '"/>' +
                '<input type="hidden" id="hdnDeliveredDate_' + i + '" value="' + DeliveredDate + '"/>' +
                '<input type="hidden" id="hdnInscanVehicleId_' + i + '" value="' + InScanVehicleID + '"/>' + 
                '<input type="hidden" id="hdnOutscanVehicleId_' + i + '" value="' + OutScanVehicleID + '"/>';

                $('#tbl1').append('<tr>' +
                    '<td>' + datahtml + '</td>' +
                    '<td>' + AWBNo + '</td>' +
                    '<td>' + AWBDate+ '</td>' +
                    '<td>' + Shipper + '</td>' +
                    '<td>' + Receiver + '</td>' +
                    '<td>' + Pieces + '</td>' +
                    '<td>' + Weight + '</td>' +
                    '<td>' + parseFloat(CourierCharge).toFixed(2) + '</td>' +
                    '<td>' + parseFloat(MaterialCost).toFixed(2) + '</td>' +
                    '<td>' + PaymentTypetext + '</td>' +
                    '<td>' + PickUpLocation + '</td>' +
                    '<td>' + DeliveryLocation + '</td>' +
                    '<td>' + ItemDescription + '</td>' +
                    '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td>' +
                    '</tr>');


        });

        $('#btnSave').click(function () {
            debugger;
            // $('#btnSave').attr('disabled', 'disabled');
            var obj = [];
            var maxrow = $('#tbl1 > tr').length;
            for (i = 0; i < maxrow; i++) {
                var deleted = $('#hdndeleted_' + i).val();
                if (deleted == 'false') {
                    debugger;
                    var AWBNo = $('#hdnAWBNo_' + i).val();
                    var CustomerID = $('#hdnCustomerID_' + i).val();
                    var AWBDate = $('#hdnTransactionDate_' + i).val();
                    var Shipper = $('#hdnConsignor_' + i).val();
                    var ConsignorContact = $("#hdnConsignorContact_" + i).val();
                    var ConsignorAddress1 = $("#hdnConsignorAddress1_" + i).val();
                    var ConsignorAddress2 = $("#hdnConsignorAddress2_" + i).val();
                    var ConsignorAddress3 = $("#hdnConsignorAddress3_" + i).val();
                    var ConsignorPhone = $("#hdnConsignorPhone_" + i).val();
                    var ConsignorCountryName = $("#hdnConsignorCountryName_" + i).val();
                    var ConsignorCityName = $("#hdnConsignorCityName_" + i).val();
                    var ConsignorLocationName = $("#hdnConsignorLocationName_" + i).val()
                    var Receiver = $('#hdnConsignee_' + i).val();
                    var ConsigneeContact = $("#hdnConsigneeContact_" + i).val();
                    var ConsigneeAddress1 = $("#hdnConsigneeAddress1_" + i).val();
                    var ConsigneeAddress2 = $("#hdnConsigneeAddress2_"+ i).val()
                    var ConsigneeAddress3 = $("#hdnConsigneeAddress3_" + i).val();
                    var ConsigneePhone = $("#hdnConsigneePhone_" + i).val();
                    var ConsigneeCountryName = $("#hdnConsigneeCountryName_" + i).val();
                    var ConsigneeCityName = $("#hdnConsigneeCityName_" + i).val();
                    var ConsigneeLocationName = $("#hdnConsigneeLocationName_" + i).val();
                    var Pieces = $("#hdnPieces_" + i).val();
                    var CourierCharge = $("#hdnCourierCharge_" + i).val();
                    var MaterialCost = $("#hdnMaterialCost_" + i).val();
                    var Weight = parseFloat($("#hdnWeight_" + i).val()).toFixed(3);
                    var ParcelTypeId = $('#hdnParcelTypeId_' + i).val();
                    var PaymentTypeId = $("#hdnPaymentTypeId_" + i).val();
                    var PickUpLocation = $('#hdnPickUpLocation_' + i).val();
                    var DeliveryLocation = $('#hdnDeliveryLocation_' + i).val();
                    var ItemDescription = $('#hdnCargoDescription_' + i).val();
                    var AssignedEmployeeID = $('#hdnAssignedEmployeeID_' + i).val(); // Assigned for collection
                    var AssignedDate = $('#hdnAssignedDate_' + i).val();
                    var PickedUpEmpID = $('#hdnPickedUpEmpID_' + i).val(); //collected by
                    var PickedupDate = $('#hdnPickedupDate_' + i).val();
                    var ProductTypeID = $('#hdnProductTypeID_' + i).val();
                    var MovementID = $('#hdnMovementID_' + i).val();
                    var OriginPlaceID = $('#hdnOrginPlaceID_' + i).val();
                    var DestinationPlaceID = $('#hdnDestinationPlaceID_' + i).val();
                    var PickupSubLocality = $('#hdnPickupSubLocality_' + i).val(); 
                    var DeliverySubLocality = $('#hdnDeliverySubLocality_' + i).val(); 
                    var DepotReceivedBy = $('#hdnDepotReceivedBy_' + i).val(); //employee name
                    var ReceivedDate = $('#hdnReceivedDate_' + i).val(); //employee name
                    var CollectedBy = $('#hdnCollectedBy_' + i).val();
                    var ReceivedBy = $('#hdnReceivedBy_' + i).val();
                    var OutScanDelivery = $('#hdnOutScanDelivery_' +i).val();
                    var DeliveryAttempted = $('#hdnDeliveryAttempted_' +i).val();
                    var Delivered = $('#hdnDelivered_' + i).val();
                    var OutScanDeliveredID = $('#hdnOutScanDeliveredID_' + i).val()
                    var OutScanDate = $('#hdnOutScanDate_' + i).val()
                    var DeliveryAttemptedBy = $('#hdnDeliveryAttemptedBy_'+i).val()
                    var DelieveryAttemptDate = $('#hdnDelieveryAttemptDate_'+i).val()
                    var DeliveredBy = $('#hdnDeliveredBy_' + i).val()
                    var DeliveredDate = $('#hdnDeliveredDate_' + i).val()
                    var AssignedForCollection = $('#hdnAssignedForCollection_' + i).val()
                    var ConsignorMobileNo = $('#hdnConsignorMobileNo_' + i).val();
                    var ConsigneeMobileNo = $('#hdnConsigneeMobileNo_' + i).val();
                    var InscanVehicleID = $('#hdnInscanVehicleId_' + i).val();  
                    var OutScanVehicleID = $('#hdnOutscanVehicleId_' + i).val();
                    var DocumentTypeId = 1;
                    var item = {
                        AWBNo: AWBNo,
                        CustomerID: CustomerID,
                        Consignor: Shipper,
                        ConsignorContact: ConsignorContact,
                        ConsignorAddress1_Building: ConsignorAddress1,
                        ConsignorAddress2_Street: ConsignorAddress2,
                        ConsignorAddress3_PinCode: ConsignorAddress3,
                        ConsignorPhone: ConsignorPhone,
                        ConsignorCountryName: ConsignorCountryName,
                        ConsignorCityName: ConsignorCityName,
                        ConsignorLocationName: ConsignorLocationName,
                        Consignee: Receiver,
                        ConsigneeContact: ConsigneeContact,
                        ConsigneeAddress1_Building: ConsigneeAddress1,
                        ConsigneeAddress2_Street: ConsigneeAddress2,
                        ConsigneeAddress3_PinCode: ConsigneeAddress3,
                        ConsigneePhone: ConsigneePhone,
                        ConsigneeCountryName: ConsigneeCountryName,
                        ConsigneeCityName: ConsigneeCityName,
                        ConsigneeLocationName: ConsigneeLocationName,
                        AssignedEmployeeID: AssignedEmployeeID,
                        CourierCharge: CourierCharge,
                        PickedUpEmpID: PickedUpEmpID,
                        PickedupDate: PickedupDate,
                        Pieces: Pieces,
                        Weight: Weight,
                        CargoDescription: ItemDescription,
                        MovementID: MovementID,
                        ProductTypeID: ProductTypeID,
                        TransactionDate: AWBDate,
                        NetTotal: CourierCharge,
                        ParcelTypeId: ParcelTypeId,
                        MaterialCost: MaterialCost,
                        PaymentModeId: PaymentTypeId,
                        DepotReceivedBy: DepotReceivedBy,
                        DocumentTypeId: DocumentTypeId,
                        OriginPlaceID: OriginPlaceID,
                        DestinationPlaceID: DestinationPlaceID,
                        PickupLocation: PickUpLocation,
                        DeliveryLocation: DeliveryLocation,
                        PickupSubLocality: PickupSubLocality,
                        DeliverySubLocality: DeliverySubLocality,
                        ConsignorMobileNo: ConsignorMobileNo,
                        ConsigneeMobileNo: ConsigneeMobileNo,
                        AssignedDate: AssignedDate,
                        AssignedForCollection: AssignedForCollection,
                        CollectedBy: CollectedBy,
                        ReceivedBy: ReceivedBy,
                        OutScanDelivery: OutScanDelivery,
                        DeliveryAttempted: DeliveryAttempted,
                        Delivered: Delivered,
                        ReceivedDate: ReceivedDate,
                        OutScanDeliveredID: OutScanDeliveredID,
                        OutScanDate: OutScanDate,
                        DeliveryAttemptedBy: DeliveryAttemptedBy,
                        DelieveryAttemptDate: DelieveryAttemptDate,
                        DeliveredBy: DeliveredBy,
                        DeliveredDate: DeliveredDate,
                        InscanVehicleId: InscanVehicleID,
                        OutscanVehicleId: OutScanVehicleID
                    }
                    
                    obj.push(item);
                }

                if (maxrow == (i + 1)) {
                    debugger;
                    $.ajax({
                        type: "POST",
                        url: "/AWBBatch/SaveBatch",
                        datatype: "Json",
                        data: { BatchNo: $('#BatchNumber').val(), BatchDate:$('#BatchDate').val(),Details: JSON.stringify(obj) },
                        success: function (response) {
                            if (response == "Ok") {
                                alert("Batch Saved Succesfully");
                                $('#btnSave').removeAttr('disabled');
                                @*location.href = '@Url.Action("Index","DRSReconc")';*@
                            }
                            else {
                                alert(response);
                                $('#btnSave').removeAttr('disabled');
                                //$.notify(response.message, "warning");
                                return false;
                            }
                        }
                    });
                }
            }
        });
    });
</script>
<section class="content-header">
    <div class="row">
        <div class="col-md-5 pull-left">
            <h1 class="headingfont">@ViewBag.Title</h1>
        </div>
    </div>
</section>


<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("Create", "AWBBatch", FormMethod.Post, new { @id = "FormReceipt" }))
    {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.ID)
        <div class="row no-margin" style="padding-top:10px">
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Batch No.</label>
                @Html.TextBoxFor(model => model.BatchNumber, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Batch Date</label>
                @Html.TextBoxFor(model => model.BatchDate, new { @class = "form-control text-right", @required = true })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class=" required headinglabel">Movement Type</label>
                @Html.DropDownListFor(model => model.MovementID, new SelectList(@ViewBag.Movement, "MovementID", "MovementType"), "Select", new { @class = "form-control", @required = "true" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel required">Parcel Type</label>                
                @Html.DropDownListFor(model => model.ParcelTypeID, new SelectList(ViewBag.parceltype, "ID", "ParcelType1"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel required">Product Type</label>
                @Html.DropDownListFor(model => model.ProductTypeID, new SelectList(ViewBag.ProductType, "ProductTypeID", "ProductName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-sm-3 text-right" style="margin-top:32px;">
                <input type="submit" class="btn btn-primary  btnwidth" value="Save " name="Command" id="btnSave" />
                <a href='@Url.Action("Index", "QuickAWB", new { id = 0 })' class="btn btn-danger  btnwidth">Cancel</a>

            </div>
        </div>



        <div class="row  searchMc">


            <h4>Update Options</h4>
            <div class="col-xs-2 col-sm-2">
                <div class="flex">

                    <div class="checkboxdesign no-padding  text-right">
                        @Html.CheckBox("AssignedForCollection", new { @name = "AssignedForCollection", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Assigned for Collection</label>
                </div>
                @Html.TextBoxFor(model => model.AssignedDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.AssignedEmployeeID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  ">
                        @Html.CheckBox("CollectedBy", new { @name = "CollectedBy", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">CollectedBy</label>

                </div>
                @Html.TextBoxFor(model => model.PickedupDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.PickedUpEmpID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right" style="float:right">
                        @Html.CheckBox("ReceivedBy", new { @name = "ReceivedBy", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Received at Store</label>

                </div>
                @Html.TextBoxFor(model => model.ReceivedDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.DepotReceivedBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                @Html.DropDownListFor(model => model.InscanVehicleId, new SelectList(ViewBag.Vehicle, "VehicleID", "VehicleDescription"), "Select", new { @class = "form-control" })
                
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  ">
                        @Html.CheckBox("OutScanDelivery", new { @name = "OutScanDelivery", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Out for Delivery</label>

                </div>
                @Html.TextBoxFor(model => model.OutScanDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.OutScanDeliveredID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                @Html.DropDownListFor(model => model.OutscanVehicleId, new SelectList(ViewBag.Vehicle, "VehicleID", "VehicleDescription"), "Select", new { @class = "form-control" })

            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right">
                        @Html.CheckBox("DeliveryAttempted", new { @name = "DeliveryAttempted", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">DeliveryAttempted</label>

                </div>
                @Html.TextBoxFor(model => model.DelieveryAttemptDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.DeliveryAttemptedBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right">
                        @Html.CheckBox("Delivered", new { @name = "Delivered", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Delivered</label>

                </div>
                @Html.TextBoxFor(model => model.DeliveredDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.DeliveredBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>


        </div>



        <div class="row no-margin" style="padding-top:10px">
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">AWB Number.</label>
                @Html.TextBoxFor(model => model.AWBNo, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">AWB Date</label>
                @Html.TextBoxFor(model => model.AWBDate, new { @class = "form-control text-right" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Shipper</label>
                @Html.TextBoxFor(model => model.Shipper, new { @class = "form-control" })
                @Html.HiddenFor(model => model.ConsignorContact)
                @Html.HiddenFor(model => model.ConsignorAddress1_Building)
                @Html.HiddenFor(model => model.ConsignorAddress2_Street)
                @Html.HiddenFor(model => model.ConsignorAddress3_PinCode)
                @Html.HiddenFor(model => model.ConsignorLocationName)
                @Html.HiddenFor(model => model.ConsignorCountryName)
                @Html.HiddenFor(model => model.ConsignorCityName)
                @Html.HiddenFor(model => model.ConsignorPhone)
                @Html.HiddenFor(model => model.ConsignorMobileNo)
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Receiver</label>
                @Html.TextBoxFor(model => model.Consignee, new { @class = "form-control" })
                @Html.HiddenFor(model => model.ConsigneeContact)
                @Html.HiddenFor(model => model.ConsigneeAddress1_Building)
                @Html.HiddenFor(model => model.ConsigneeAddress2_Street)
                @Html.HiddenFor(model => model.ConsigneeAddress3_PinCode)
                @Html.HiddenFor(model => model.ConsigneeLocationName)
                @Html.HiddenFor(model => model.ConsigneeCountryName)
                @Html.HiddenFor(model => model.ConsigneeCityName)
                @Html.HiddenFor(model => model.ConsigneePhone)
                @Html.HiddenFor(model => model.ConsigneeMobileNo)
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Pieces</label>
                @Html.TextBoxFor(model => model.Pieces, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Weight</label>
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Courier Charge</label>
                @Html.TextBoxFor(model => model.CourierCharge, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Mat. Cost</label>
                @Html.TextBoxFor(model => model.MaterialCost, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Pay. Mode</label>
                @Html.DropDownListFor(model => model.PaymentTypeId, new SelectList(@ViewBag.PaymentMode, "ID", "PaymentModeText"), "Select", new { @class = "form-control", @required = "true" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Pickup Location</label>
                @Html.TextBoxFor(model => model.PickUpLocation, new { @class = "form-control" })
                @Html.HiddenFor(model => model.PickupSubLocality)
                @Html.HiddenFor(model => model.OriginPlaceID)
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Delivery Location</label>
                @Html.TextBoxFor(model => model.DeliveryLocation, new { @class = "form-control" })
                @Html.HiddenFor(model => model.DeliverySubLocality, new { @class = "form-control" })
                @Html.HiddenFor(model => model.DestinationPlaceID)
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Item Description</label>
                @Html.TextBoxFor(model => model.ItemDescription, new { @class = "form-control" })
            </div>
            <!--  <div class="pull-right" style="padding-right:5px">
                 <button class="btn btn-primary small_btn" type="button" id="btnAdd"><i class="fa fa-plus" aria-hidden="true"></i> </button>
             </div> -->
        </div>


        <div class="col-md-12 flex justify-between" style="padding-top: 10px">
            <ul class="list-unstyled show-error">
                <li>Display errors here</li>
            </ul>

         <input type="button" class="btn btn-primary  btnwidth" value="Add & Continue" name="Command" id="btnAdd" />
        </div>

        <div class="row no-margin" style="padding-top:10px">
            <div class="col-xs-12 no-padding for-device">
                <div class="data-table payment-div">
                    <div class="data">
                        <table border="1" style="margin-top: 15px; " class="table table-bordered table-responsive">
                            <thead style="background:transparent;">
                                <tr style="font-weight: bold; background:#07a7e3;">
                                    <th>
                                        S.No
                                    </th>
                                    <th> AWB No.</th>
                                    <th> AWB Date</th>
                                    <th>Shipper</th>
                                    <th>Receiver</th>
                                    <th>Pieces</th>
                                    <th>Weight</th>
                                    <th>Courier Charge</th>
                                    <th>Material Cost</th>
                                    <th>Payment Type</th>
                                    <th>
                                        Pickup Location
                                    </th>
                                    <th>Delivery Location</th>
                                    <th>Item</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="tbl1">
                                @if (Model.ID > 0)
                                {
                                    for (int i = 1; i <= Model.Details.Count; i++)
                                    {

                                        <tr>
                                            <td>
                                                @i
                                            </td>
                                            <td>

                                                @Model.Details[i - 1].AWBNo
                                                @*@Html.HiddenFor(item => @Model.Details[i].AWBBOOKIssueID)
                                                    @Html.HiddenFor(item => @Model.Details[i].AWBBOOKIssueDetailID)
                                                    @Html.HiddenFor(item => @Model.Details[i].InScanID)*@

                                            </td>
                                        </tr>

                                    }
                                }
                            </tbody>

                        </table>


                    </div>
                </div>
            </div>
        </div>

    }
</section>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDIFoseM09VMMtw9s6E_h7LmRrdsZ0jkPU&libraries=places&callback=initAutocomplete" async defer></script>