@model CMSV2.Models.AWBBatchVM
@{

    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var spath = "/DRSReceipt/Index/0";// System.Configuration.ConfigurationManager.AppSettings["spath"].ToString();
    var _decimal = @Session["Decimal"].ToString();
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style type="text/css">
    
.searchMc {
    border: 2px solid #07a7e3;
    position: relative;
    padding: 30px 10px;
    margin:20px 0;
}
.searchMc h4 {
    padding: 0 30px;
    position: ABSOLUTE;
    top: -21px;
    display: inline-block;
    left: 22px;
    background: #f8fbff;
    text-align: center;
}
.show-error{
    color:red;
}
.btnwidth{
    min-width: 100px;
    width:auto;
}
.searchMc .checkboxdesign{
    align-items: flex-start;
}

</style>
<script>
    $(document).ready(function () {

        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $("textarea").css({ "border-radius": "5px" });
        $('#BatchDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#AWBDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#AssignedDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#DeliveredDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#DelieveryAttemptDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#OutScanDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#ReceivedDate').datetimepicker({ format: 'DD-MM-YYYY' });
        $('#PickedupDate').datetimepicker({ format: 'DD-MM-YYYY' });

        $("#Shipper").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/QuickAWB/GetShipperName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ShipperName,
                                value: val.ShipperName,
                                AcHeadID: val.AcHeadID,
                                ContactPerson: val.ContactPerson,
                                Address1: val.Address1,
                                Address2: val.Address2,
                                Pincode: val.PinCode,
                                Phone: val.Phone,
                                CountryName: val.CountryName,
                                CityName: val.CityName,
                                LocationName: val.LocationName,

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, i) {
                $('#Shipper').val(i.item.value);
                $("#ConsignorContact").val(i.item.ContactPerson);
                $("#ConsignorAddress1_Building").val(i.item.Address1);
                $("#ConsignorAddress2_Street").val(i.item.Address2);

                $("#ConsignorAddress3_PinCode").val(i.item.Pincode);

                $("#ConsignorPhone").val(i.item.Phone);
                $("#ConsignorCountryName").val(i.item.CountryName);
                $("#ConsignorCityName").val(i.item.CityName);
                $("#ConsignorLocationName").val(i.item.LocationName);
                $("#PickUpLocation").val(i.item.LocationName);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#Shipper").val(i.item.label);
                $("#ConsignorContact").val(i.item.ContactPerson);
                $("#ConsignorAddress1_Building").val(i.item.Address1);
                $("#ConsignorAddress2_Street").val(i.item.Address2);

                $("#ConsignorAddress3_PinCode").val(i.item.Pincode);

                $("#ConsignorPhone").val(i.item.Phone);
                $("#ConsignorCountryName").val(i.item.CountryName);
                $("#ConsignorCityName").val(i.item.CityName);
                $("#ConsignorLocationName").val(i.item.LocationName);
                $("#PickUpLocation").val(i.item.LocationName);

            },

        });

        $("#Consignee").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/QuickAWB/GetReceiverName', //'/QuickAWB/GetConsigneeName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Name,
                                value: val.Name,
                                ContactPerson: val.ContactPerson,
                                Address1: val.Address1,
                                Address2: val.Address2,
                                Pincode: val.PinCode,
                                Phone: val.Phone,
                                CountryName: val.CountryName,
                                CityName: val.CityName,
                                LocationName: val.LocationName,

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, ui) {
                $('#Consignee').val(ui.item.value);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#Consignee").val(i.item.label);
                $("#ConsigneeContact").val(i.item.ContactPerson);
                $("#ConsigneeAddress1_Building").val(i.item.Address1);
                $("#ConsigneeAddress2_Street").val(i.item.Address2);

                $("#ConsigneeAddress3_PinCode").val(i.item.Pincode);
                $("#ConsigneePhone").val(i.item.Phone);
                $("#ConsigneeCountryName").val(i.item.CountryName);
                $("#ConsigneeCityName").val(i.item.CityName);
                $("#ConsigneeLocationName").val(i.item.LocationName);
                $("#ConsigneeLocation").val(i.item.LocationName);

            },

        });
        $('#btnAdd').click(function () {
            var AWBNo = $('#AWBNo').val();
            var AWBDate = $('#AWBDate').val();
            var Shipper = $('#Shipper').val();
            var ConsignorContact= $("#ConsignorContact").val();
            var ConsignorAddress1 = $("#ConsignorAddress1_Building").val();
            var ConsignorAddress2 = $("#ConsignorAddress2_Street").val();
            var ConsignorAddress3= $("#ConsignorAddress3_PinCode").val();
            var ConsignorPhone =$("#ConsignorPhone").val();
            var ConsignorCountryName =$("#ConsignorCountryName").val();
            var ConsignorCityName = $("#ConsignorCityName").val();
            var ConsignorLocationName =$("#ConsignorLocationName").val()
            var Receiver = $('#Consignee').val();
            var ConsigneeContact = $("#ConsigneeContact").val();
            var ConsigneeAddress1= $("#ConsigneeAddress1_Building").val();
            var ConsigneeAddress2= $("#ConsigneeAddress2_Street").val()
            var ConsigneeAddress3 = $("#ConsigneeAddress3_PinCode").val();
            var ConsigneePhone = $("#ConsigneePhone").val();
            var ConsigneeCountryName = $("#ConsigneeCountryName").val();
            var ConsigneeCityName = $("#ConsigneeCityName").val();
            var ConsigneeLocationName = $("#ConsigneeLocationName").val();
            var Pieces = $("#Pieces").val();
            var CourierCharge = $("#CourierCharge").val();
            var MaterialCost = $("#MaterialCost").val();
            var Weight = parseFloat($("#Weight").val()).toFixed(3);

            var PaymentTypeId = $("#PaymentTypeId").val();
            var PaymentTypetext = $("#PaymentTypeId option:selected").text();
            var PickUpLocation = $('#PickUpLocation').val();
            var DeliveryLocation = $('#DeliveryLocation').val();
            var ItemDescription = $('#ItemDescription').val();
            var i = $('#tbl1 > tr').length + 1;
                $('#tbl1').append('<tr>' +
                    '<td>' + i + '</td>' +
                    '<td>' + AWBNo + '</td>' +
                    '<td>' + AWBDate+ '</td>' +
                    '<td>' + Shipper + '</td>' +
                    '<td>' + Receiver + '</td>' +
                    '<td>' + Pieces + '</td>' +
                    '<td>' + Weight + '</td>' +
                    '<td>' + parseFloat(CourierCharge).toFixed(2) + '</td>' +
                    '<td>' + parseFloat(MaterialCost).toFixed(2) + '</td>' +
                    '<td>' + PaymentTypetext + '</td>' +
                    '<td>' + PickUpLocation + '</td>' +
                    '<td>' + DeliveryLocation + '</td>' +
                    '<td>' + ItemDescription + '</td>' +
                    '<td>' + 'Delete' + '</td>' +
                    '<td><a href="javascript:void(0)" onclick="deletetrans(this,' + i + ')"><i class="fa fa-times"></i></a></td>' +
                    '</tr>');


        });
        $('#btnSave').click(function () {
            debugger;
            // $('#btnSave').attr('disabled', 'disabled');
            var obj = [];
            var maxrow = $('#tbl1 > tr').length;
            for (i = 0; i < maxrow; i++) {
                var deleted = 'false';// $('#hdndeleted_' + i).val();
                if (deleted == 'false') {
                    debugger;
                    var AWBNo = $('#AWBNo').val();
                    var AWBDate = $('#AWBDate').val();
                    var Shipper = $('#Shipper').val();
                    var ConsignorContact = $("#ConsignorContact").val();
                    var ConsignorAddress1 = $("#ConsignorAddress1_Building").val();
                    var ConsignorAddress2 = $("#ConsignorAddress2_Street").val();
                    var ConsignorAddress3 = $("#ConsignorAddress3_PinCode").val();
                    var ConsignorPhone = $("#ConsignorPhone").val();
                    var ConsignorCountryName = $("#ConsignorCountryName").val();
                    var ConsignorCityName = $("#ConsignorCityName").val();
                    var ConsignorLocationName = $("#ConsignorLocationName").val()
                    var Receiver = $('#Consignee').val();
                    var ConsigneeContact = $("#ConsigneeContact").val();
                    var ConsigneeAddress1 = $("#ConsigneeAddress1_Building").val();
                    var ConsigneeAddress2 = $("#ConsigneeAddress2_Street").val()
                    var ConsigneeAddress3 = $("#ConsigneeAddress3_PinCode").val();
                    var ConsigneePhone = $("#ConsigneePhone").val();
                    var ConsigneeCountryName = $("#ConsigneeCountryName").val();
                    var ConsigneeCityName = $("#ConsigneeCityName").val();
                    var ConsigneeLocationName = $("#ConsigneeLocationName").val();
                    var Pieces = $("#Pieces").val();
                    var CourierCharge = $("#CourierCharge").val();
                    var MaterialCost = $("#MaterialCost").val();
                    var Weight = parseFloat($("#Weight").val()).toFixed(3);

                    var PaymentTypeId = $("#PaymentTypeId").val();
                    var PaymentTypetext = $("#PaymentTypeId option:selected").text();
                    var PickUpLocation = $('#PickUpLocation').val();
                    var DeliveryLocation = $('#DeliveryLocation').val();
                    var ItemDescription = $('#ItemDescription').val();

                    var item = {
                        AWBNo: AWBNo,
                        AWBDate:AWBDate,
                        Shipper: Shipper,
                        Receiver: Receiver,
                        ConsignorContact: ConsignorContact,
                        ConsignorAddress1: ConsignorAddress1,
                        ConsignorAddress2: ConsignorAddress2,
                        ConsignorAddress3: ConsignorAddress3,
                        ConsignorPhone : ConsignorPhone,
                        ConsignorCountryName :ConsignorCountryName,
                        ConsignorCityName :ConsignorCityName,
                        ConsignorLocationName : ConsignorLocationName,
                        ConsigneeContact: ConsigneeContact,
                        ConsigneeAddress1 :ConsigneeAddress1,
                        ConsigneeAddress2: ConsigneeAddress2,
                        ConsigneeAddress3: ConsigneeAddress3,
                        ConsigneePhone : ConsigneePhone,
                        ConsigneeCountryName: ConsigneeCountryName,
                        ConsigneeCityName: ConsigneeCityName,
                        ConsigneeLocationName: ConsigneeLocationName,
                        Pieces: Pieces,
                        CourierCharge: CourierCharge,
                        MaterialCost: MaterialCost,
                        Weight: Weight,
                        PaymentTypeId: PaymentTypeId,                        
                        PickUpLocation: PickUpLocation,
                        DeliveryLocation: DeliveryLocation,
                        ItemDescription: ItemDescription

                    }
                    obj.push(item);
                }

                if (maxrow == (i + 1)) {
                    debugger;
                    $.ajax({
                        type: "POST",
                        url: "/AWBBatch/SaveBatch",
                        datatype: "Json",
                        data: { BatchNo: $('#BatchNumber').val(), BatchDate:$('#BatchDate').val(),Details: JSON.stringify(obj) },
                        success: function (response) {
                            if (response == "Ok") {
                                alert("Batch Saved Succesfully");
                                $('#btnSave').removeAttr('disabled');                               
                                @*location.href = '@Url.Action("Index","DRSReconc")';*@
                            }
                            else {
                                alert(response);
                                $('#btnSave').removeAttr('disabled');
                                //$.notify(response.message, "warning");
                                return false;
                            }
                        }
                    });
                }
            }
        });
    });
</script>
<section class="content-header">
    <div class="row">
        <div class="col-md-5 pull-left">
            <h1 class="headingfont">@ViewBag.Title</h1>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("Create", "AWBBatch", FormMethod.Post, new { @id = "FormReceipt" }))
    {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.ID)
        <div class="row no-margin" style="padding-top:10px">
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Batch No.</label>
                @Html.TextBoxFor(model => model.BatchNumber, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Batch Date</label>
                @Html.TextBoxFor(model => model.BatchDate, new { @class = "form-control text-right", @required = true })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class=" required headinglabel">Movement Type</label>
                @Html.DropDownListFor(model => model.MovementID, new SelectList(@ViewBag.Movement, "MovementID", "MovementType"), "Select", new { @class = "form-control", @required = "true" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel required">Parcel Type</label>
                @Html.DropDownListFor(model => model.ParcelTypeID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel required">Product Type</label>
                @Html.DropDownListFor(model => model.ProductTypeID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-sm-3 text-right" style="margin-top:32px;">
                <input type ="submit" class= "btn btn-primary  btnwidth" value = "Save " name = "Command" id = "btnSave" />
   <a href = '@Url.Action("Index", "QuickAWB", new { id = 0 })' class= "btn btn-danger  btnwidth">Cancel</a >

            </div>
        </div>
       


        <div class="row  searchMc">
           

           <h4>Update Options</h4>
            <div class="col-xs-2 col-sm-2">
                <div class="flex">
                    
                    <div class="checkboxdesign no-padding  text-right" >
                        @Html.CheckBox("AssignedForCollection", new { @name = "AssignedForCollection", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Assigned for Collection</label>
                </div>
                @Html.TextBoxFor(model => model.AssignedDate, new { @class = "form-control text-right", @required = true })                
                @Html.DropDownListFor(model => model.AssignedEmployeeID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  ">
                        @Html.CheckBox("CollectedBy", new { @name = "CollectedBy", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">CollectedBy</label>

                </div>
                @Html.TextBoxFor(model => model.PickedupDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.PickedUpEmpID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right" style="float:right">
                        @Html.CheckBox("ReceivedBy", new { @name = "ReceivedBy", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Received at Store</label>

                </div>
                @Html.TextBoxFor(model => model.ReceivedDate, new { @class = "form-control text-right", @required = true })                
                @Html.DropDownListFor(model => model.DepotReceivedBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  " >
                        @Html.CheckBox("OutScanDelivery", new { @name = "OutScanDelivery", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Out for Delivery</label>

                </div>                
                @Html.TextBoxFor(model => model.OutScanDate, new { @class = "form-control text-right", @required = true })                
                @Html.DropDownListFor(model => model.OutScanDeliveredID, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right" >
                        @Html.CheckBox("DeliveryAttempted", new { @name = "DeliveryAttempted", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">DeliveryAttempted</label>

                </div>
                @Html.TextBoxFor(model => model.DelieveryAttemptDate, new { @class = "form-control text-right", @required = true })                
                @Html.DropDownListFor(model => model.DeliveryAttemptedBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <div class="flex">
                    <div class="checkboxdesign no-padding  text-right" >
                        @Html.CheckBox("Delivered", new { @name = "Delivered", @checked = "checked" }) &nbsp
                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important"></label>
                    </div>
                    <label class="headinglabel required">Delivered</label>

                </div>
                @Html.TextBoxFor(model => model.DeliveredDate, new { @class = "form-control text-right", @required = true })
                @Html.DropDownListFor(model => model.DeliveredBy, new SelectList(ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>


        </div>



        <div class="row no-margin" style="padding-top:10px">
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">AWB Number.</label>
                @Html.TextBoxFor(model => model.AWBNo, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">AWB Date</label>
                @Html.TextBoxFor(model => model.AWBDate, new { @class = "form-control text-right" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Shipper</label>
                @Html.TextBoxFor(model => model.Shipper, new { @class = "form-control" })
                @Html.HiddenFor(model => model.ConsignorContact)
                @Html.HiddenFor(model => model.ConsignorAddress1_Building)
                @Html.HiddenFor(model => model.ConsignorAddress2_Street)
                @Html.HiddenFor(model => model.ConsignorAddress3_PinCode)
                @Html.HiddenFor(model => model.ConsignorLocationName)
                @Html.HiddenFor(model => model.ConsignorCountryName)
                @Html.HiddenFor(model => model.ConsignorCityName)
                @Html.HiddenFor(model => model.ConsignorPhone)
                @Html.HiddenFor(model => model.ConsignorMobileNo)
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Receiver</label>
                @Html.TextBoxFor(model => model.Consignee, new { @class = "form-control" })
                @Html.HiddenFor(model => model.ConsigneeContact)
                @Html.HiddenFor(model => model.ConsigneeAddress1_Building)
                @Html.HiddenFor(model => model.ConsigneeAddress2_Street)
                @Html.HiddenFor(model => model.ConsigneeAddress3_PinCode)
                @Html.HiddenFor(model => model.ConsigneeLocationName)
                @Html.HiddenFor(model => model.ConsigneeCountryName)
                @Html.HiddenFor(model => model.ConsigneeCityName)
                @Html.HiddenFor(model => model.ConsigneePhone) 
                @Html.HiddenFor(model => model.ConsigneeMobileNo)
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Pieces</label>
                @Html.TextBoxFor(model => model.Pieces, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Weight</label>
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Courier Charge</label>
                @Html.TextBoxFor(model => model.CourierCharge, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Mat. Cost</label>
                @Html.TextBoxFor(model => model.MaterialCost, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-1">
                <label class="headinglabel">Pay. Mode</label>
                @Html.DropDownListFor(model => model.PaymentTypeId, new SelectList(@ViewBag.PaymentMode, "ID", "PaymentModeText"), "Select", new { @class = "form-control", @required = "true" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Pickup Location</label>
                @Html.TextBoxFor(model => model.PickUpLocation, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-3">
                <label class="headinglabel">Delivery Location</label>
                @Html.TextBoxFor(model => model.DeliveryLocation, new { @class = "form-control" })
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="headinglabel">Item Description</label>
                @Html.TextBoxFor(model => model.ItemDescription, new { @class = "form-control" })
            </div>
           <!--  <div class="pull-right" style="padding-right:5px">
                <button class="btn btn-primary small_btn" type="button" id="btnAdd"><i class="fa fa-plus" aria-hidden="true"></i> </button>
            </div> -->
        </div>

      
        <div class= "col-md-12 flex justify-between" style="padding-top: 10px">
            <ul class="list-unstyled show-error">
                <li>Display errors here</li>
            </ul>

            @if(Model.ID > 0)
            {
                <input type = "submit" class= "btn btn-primary  btnwidth" value = "Update" id = "btnSave" />

            }
            else
            {
                <input type ="submit" class= "btn btn-primary  btnwidth" value = "Add & Continue" name = "Command" id = "btnSave" />
              
            }
           
        </div>

        <div class= "row no-margin" style = "padding-top:10px" >
            <div class= "col-xs-12 no-padding for-device" >
                <div class= "data-table payment-div" >
                    <div class= "data">
                        <table border = "1" style = "margin-top: 15px; " class= "table table-bordered table-responsive" >
                            <thead style = "background:transparent;" >
                                <tr style="font-weight: bold; background:#07a7e3;">
                                    <th>
                                        S.No
                                    </th>
                                    <th> AWB No.</th>
                                    <th> AWB Date</th>
                                    <th>Shipper</th>
                                    <th>Receiver</th>
                                    <th>Pieces</th>
                                    <th>Weight</th>
                                    <th>Courier Charge</th>
                                    <th>Material Cost</th>
                                    <th>Payment Type</th>
                                    <th>
                                        Pickup Location
                                    </th>
                                    <th>Delivery Location</th>
                                    <th>Item</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id = "tbl1" >
                                @if(Model.ID > 0)
                                {
                                    for (int i = 1; i <= Model.Details.Count; i++)
                                    {

                                        <tr>
                                            <td>
                                                @i
                                            </td>
                                            <td>

                                                @Model.Details[i - 1].AWBNo
                                                    @*@Html.HiddenFor(item => @Model.Details[i].AWBBOOKIssueID)
                                                        @Html.HiddenFor(item => @Model.Details[i].AWBBOOKIssueDetailID)
                                                        @Html.HiddenFor(item => @Model.Details[i].InScanID)*@

                    </td>
                    </tr>

                }
    }
    </tbody>

    </table>


</div>
</div>
</div>
            </div>

            }
</section>

