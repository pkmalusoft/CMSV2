@model CMSV2.Models.AWBBatchVM
@{
    Layout = null;
}
<style>
    ul.ui-front {
        z-index: 1100;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Shipper1").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/AWBBatch/GetShipperName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ShipperName,
                                value: val.ShipperName,
                                AcHeadID: val.AcHeadID,
                                ContactPerson: val.ContactPerson,
                                Address1: val.Address1,
                                Address2: val.Address2,
                                Pincode: val.PinCode,
                                Phone: val.Phone,
                                CountryName: val.CountryName,
                                CityName: val.CityName,
                                LocationName: val.LocationName,
                                ConsignorMobileNo: val.ConsignorMobileNo

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, i) {
                $('#Shipper1').val(i.item.value);
                $("#ConsignorContact1").val(i.item.ContactPerson);
                $("#ConsignorAddress1_1").val(i.item.Address1);
                $("#ConsignorAddress2_1").val(i.item.Address2);

                $("#ConsignorAddress3_1").val(i.item.Pincode);

                $("#ConsignorPhone1").val(i.item.Phone);
                $("#ConsignorCountryName1").val(i.item.CountryName);
                $("#ConsignorCityName1").val(i.item.CityName);
                $("#ConsignorLocationName1").val(i.item.LocationName);
                //$("#PickUpLocation").val(i.item.LocationName);
                //console.log(i.item.ConsignorMobileNo);
                if (i.item.ConsignorMobileNo == null || i.item.ConsignorMobileNo == 'undefined' || i.item.ConsignorMobileNo == '')
                    $("#ConsignorMobileNo1").val('');
                else
                    $("#ConsignorMobileNo1").val(i.item.ConsignorMobileNo);


            },
            select: function (e, i) {
                e.preventDefault();
                $("#Shipper1").val(i.item.label);
                $("#ConsignorContact1").val(i.item.ContactPerson);
                $("#ConsignorAddress1_1").val(i.item.Address1);
                $("#ConsignorAddress2_1").val(i.item.Address2);

                $("#ConsignorAddress3_1").val(i.item.Pincode);

                $("#ConsignorPhone1").val(i.item.Phone);
                $("#ConsignorCountryName1").val(i.item.CountryName);
                $("#ConsignorCityName1").val(i.item.CityName);
                $("#ConsignorLocationName1").val(i.item.LocationName);
                //$("#PickUpLocation").val(i.item.LocationName);
                if (i.item.ConsignorMobileNo == null || i.item.ConsignorMobileNo == 'undefined')
                    $("#ConsignorMobileNo1").val('');
                else
                    $("#ConsignorMobileNo1").val(i.item.ConsignorMobileNo);
                //fillPickupLocation();

            },

        });
        $('#Shipper1').change(function () {

            $.ajax({
                url: '/AWBBatch/GetConsignorCustomer', //'/AWB/GetConsigneeName',
                datatype: "json",
                data: {
                    customername: $('#Shipper1').val()
                },
                success: function (data) {

                    if (data == null) {
                        $('#CustomerID').val(0);
                    }
                    else {
                        $('#CustomerID').val(data.CustomerID);
                    }
                }
            });
        });
        $("#ConsignorLocationName1").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetEventVenuesList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        if (data.length == 0) {
                            $('#EventVenueId').val("");
                            $('#VenueLocationMesssage').show();
                            return false;
                        }
                        else {
                            response($.map(data, function (item) {
                                return {
                                    label: item.description,
                                    value: item.place_id
                                }
                            }));
                        }
                    },
                    error: function (x, y, z) {
                        alert('error');
                    }
                });
            },
            messages: {
                noResults: "", results: ""
            },
            select: function (event, ui) {
                $('#ConsignorLocationName1').val(ui.item.label);
                $('#PlaceId').val(ui.item.value);
                return false;
            }
        });
        ///.autocomplete("widget").addClass("CitiesAutocomplete");


        $("#ConsignorLocationName1").change(function () {

            $.ajax({
                type: "GET",
                url: "/ZoneChart/GetVenueDetailsByPlace",
                datatype: "Json",
                data: { placeId: $('#PlaceId').val() },
                success: function (response) {
                    debugger;
                   // console.log(response);
                    $('#ConsignorCountryName1').val(response.Country);
                    $('#ConsignorCityName1').val(response.City);
                }
            });
        })

        $('#Shipper1').focus();
    });

</script>
<div class="row no-margin" style="margin-top:10px!important">
    <div class="col-md-6">
        <label class="headinglabel required">Shipper Name</label>
        @Html.TextBoxFor(model => model.Shipper1, new { @class = "form-control txttarget", @autocomplete = "off", @type = "search", @required = "true", @style = "", @placeholder = "Shipper Name" })
        <input type="hidden" value="" id="PlaceId" />
    </div>

    <div class="col-md-6">
        <label class="headinglabel required">Contact Person</label>
        @Html.TextBoxFor(model => model.ConsignorContact1, new { @class = "form-control txttarget", @required = "true", @placeholder = "Contact Person" })
        @Html.ValidationMessageFor(model => model.ConsignorContact1, "", new { @class = "text-danger", @placeholder = "Contact Person" })
    </div>

</div>
<div class="row no-margin" style="margin-top:10px!important">
    <div class="col-md-4">
        <label class="headinglabel">Flat/Building</label>
        @Html.TextBoxFor(model => model.ConsignorAddress1_1, new { @class = "form-control txttarget", @required = "true", @placeholder = "Flat/Building" })
    </div>

    <div class="col-md-4">
        <label class="headinglabel">Street</label>
        @Html.TextBoxFor(model => model.ConsignorAddress2_1, new { @class = "form-control txttarget", @required = "true", @placeholder = "Street" })
    </div>
    <div class="col-md-4">
        <label class="headinglabel">Pincode</label>
        @Html.TextBoxFor(model => model.ConsignorAddress3_1, new { @class = "form-control text-right txttarget", @required = "true", @placeholder = "PinCode" })
    </div>
</div>

<div class="row no-margin" style="padding-top: 10px" id="divcustomer2">
    <div class="col-md-4">
        <label class="headinglabel">Location</label>
        @Html.TextBoxFor(model => model.ConsignorLocationName1, new { @class = "form-control txttarget autocomplete", @required = "true", @placeholder = "Location" })
    </div>
    <div class="col-md-4">
        <label class="headinglabel">Origin City</label>
        @Html.TextBoxFor(model => model.ConsignorCityName1, new { @class = "form-control txttarget", @required = "true", @readonly="readonly"   })
    </div>
    <div class="col-md-4">
        <label class="headinglabel">Origin Country</label>
        @Html.TextBoxFor(model => model.ConsignorCountryName1, new { @class = "form-control txttarget", @required = "true" , @readonly = "readonly" })

    </div>
</div>
<div class="row no-margin" style="padding-top: 10px" id="divcustomer3">

    <div class="col-md-6">
        <label class="headinglabel">Telephone No.</label>
        @Html.TextBoxFor(model => model.ConsignorPhone1, new { @class = "form-control textright", @required = "true", @placeholder = "Telephone" })
    </div>
    <div class="col-md-6">
        <label class="headinglabel">Mobile No.</label>
        @Html.TextBoxFor(model => model.ConsignorMobileNo1, new { @class = "form-control textright", @required = "true", @placeholder = "Telephone" })
    </div>
</div>
