
@model CMSV2.Models.DCODReceiptVM
@{
    int i = 0;
    var _decimal = @Session["Decimal"].ToString();
}

@foreach (var item in Model.Details)
{
    <tr>
        <td>

            @Html.HiddenFor(model => model.Details[i].ReceiptDetailID, new { @Value = @item.ReceiptDetailID })
            @Html.HiddenFor(model => model.Details[i].ReceiptID, new { @Value = @item.ReceiptID })
            @Html.HiddenFor(model => model.Details[i].AWBNo, new { @Value = @item.AWBNo })            
            @Html.HiddenFor(model => model.Details[i].InScanId, new { @Value = @item.InScanId })
            @Html.HiddenFor(model => model.Details[i].CourierCharge, new { @Value = @item.CourierCharge })
            @Html.HiddenFor(model => model.Details[i].CustomCharge, new { @Value = @item.CustomCharge })
            @Html.HiddenFor(model => model.Details[i].OtherCharge, new { @Value = @item.OtherCharge })
            @Html.HiddenFor(model => model.Details[i].TotalCharge, new { @Value = @item.TotalCharge , @id = "txtTotalCharge_" + @i })

            
            <div class="col-md-1 checkboxdesign">
                @(i + 1)
                @Html.CheckBoxFor(model => model.Details[i].AWBChecked, new { @id="chk_" + @i , @name = "AWBChecked", @class = "checkfilter calfield",style="margin-left:10px;" })
                @*@Html.CheckBox(@item.AWBChecked, new { @name = "AWBChecked", value = @item.AWBChecked })*@
            </div>
        </td>        
        <td>
            @item.AWBNo
        </td>
        <td>
            @CMSV2.Models.CommanFunctions.GetShortDateFormat( @item.AWBDateTime)
         </td>
         <td>
             @item.ConsigneeName
         </td>
         <td>
             @item.ConsigneeCountryName
         </td>
         <td class="text-right">
             @CMSV2.Models.CommanFunctions.GetFormatNumber(@item.TotalCharge, _decimal)
         </td>        
         <td class="text-right">
             @*<input type="number" min="0" class="text-right allocation" id="txtAmountAllocated_@i" name="Details[@i].AmountAllocate" value="@item.AmountAllocate" />*@
             @*@Html.TextBoxFor(model => model.Details[i].AmountAllocate, new { @id = "chk_" + @i, @name = "AWBChecked", @class = "checkfilter calfield", style = "margin-left:10px;" })*@
             @Html.TextBoxFor(model=>model.Details[i].AmountAllocate, string.Format("{0:n2}", @Model.Details[i].AmountAllocate), new { @class = "allocation  text-right", @id = "txtAmountAllocated_" + @i })
         </td>
         <td class="text-right">
             @*<input type="number" class="text-right allocation" id="txtDiscount_@i" name="Details[@i].Discount" value="@item.Discount" />*@
             @Html.TextBoxFor(model => model.Details[i].Discount, string.Format("{0:n2}", @Model.Details[i].Discount), new { @class = "allocation text-right", @id = "txtDiscount_" + @i })
         </td>

         @*<td style="width:101px">
        <a onclick="deleteAWBItem('@i')" href="javascript:void(0);"><i class="fa fa-times"></i></a>
    </td>*@
</tr>
    i++;
}



<script>
    $(document).ready(function () {
       

        $("#Selectall").change(function () {
            var i = 0;
            if ($(this).prop("checked") == true) {
                i = 1;
                $("#listContainer tbody tr").addClass('Selected');
                $(".checkfilter").prop('checked', true);
            } else {
                $("#listContainer tbody tr").removeClass('Selected');
                $(".checkfilter").prop('checked', false);
            }

            calculatetotal();      

        });

        $(".checkfilter").change(function () {
            debugger;
            var id = this.id;
            var idindex = id.split('_')[1];
            if ($(this).prop("checked") == true) {
                $("#listContainer tbody tr[id=" + idindex + "]").addClass('Selected');
                $('#txtAmountAllocated_' + idindex).val($('#txtTotalCharge_' + idindex).val());
                $('#txtDiscount_' + idindex).val(0);
                calculatetotal();

            } else {
                $("#listContainer tbody tr[id=" + idindex + "]").removeClass('Selected');
                $('#txtAmountAllocated_' + idindex).val(0);
                $('#txtDiscount_' + idindex).val(0);
                $("#Selectall").prop('checked', false);
                calculatetotal();
            }
           
            
        });

        $('.allocation').change(function () {
            var id = $(this).attr('id');
            var idindex = id.split('_')[1];
            checkallocation(idindex, this);
            calculatetotal();            
            
        });

        $('.allocation').blur(function () {
            
            $(this).val(parseFloat($(this).val()).toFixed(2));
            
        });
    });

</script>